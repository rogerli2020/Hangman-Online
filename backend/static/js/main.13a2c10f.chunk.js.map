{"version":3,"sources":["components/timer.jsx","actions/index.js","components/chatbox.jsx","components/wordEntryScreen.jsx","components/guesserWaitScreen.jsx","components/connectionErrorScreen.jsx","components/scoreBoardScreen.jsx","components/wordBoard.jsx","components/eachKey.jsx","components/keyboard.jsx","components/wordInfoPanel.jsx","components/eachHint.jsx","components/hints.jsx","components/gameGrid.jsx","components/gameWaitScreen.jsx","components/conclusionPage.jsx","components/timerAutomatic.jsx","components/hintChoicePage.jsx","components/gameWelcomeScreen.jsx","components/game.js","containers/Home.js","actions/types.js","actions/auth.js","containers/Login.js","containers/Signup.js","containers/HowToPlay.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","containers/Facebook.js","containers/Google.js","containers/RedirectPage.js","reducers/allMessages.js","reducers/serverSocket.js","reducers/gamevars.js","reducers/gameState.js","reducers/currentRoundCount.js","reducers/hintsPool.js","reducers/ex.js","reducers/gsr.js","reducers/board.js","reducers/chosenWord.js","reducers/cguesses.js","reducers/fguesses.js","reducers/hints.js","reducers/hintRequested.js","reducers/p1ScoreBoard.js","reducers/p2ScoreBoard.js","reducers/rotated.js","reducers/roundState.js","reducers/wordWasRandom.js","reducers/guessedCorrectly.js","reducers/wrongGuesses.js","reducers/myPlayerId.js","reducers/disconnected.js","reducers/timer.js","reducers/playerCount.js","reducers/auth.js","reducers/index.js","store.js","components/Navbar.js","hocs/Layout.js","utils/socketConnection.js","App.js","index.js"],"names":["Timer","props","seconds","useSelector","state","timerReducer","_jsxs","style","backgroundImage","display","padding","paddingLeft","marginBottom","noMargin","children","leftText","_jsx","fontWeight","color","rightText","addNewMessage","newMessage","type","data","sendMessage","msg","Chatbox","dispatch","useDispatch","allMessages","allMessagesReducer","authInfo","auth","chatContainer","React","createRef","useEffect","scrollToMyRef","scroll","current","scrollHeight","clientHeight","scrollTo","Card","backgroundColor","fontSize","textAlign","margin","height","width","overflowY","wordWrap","ref","key","colorMapping","length","map","thisMessage","renderAllMessages","onSubmit","event","preventDefault","chatMessage","target","value","Input","placeholder","Button","WordEntryScreen","timeForChoosing","gamevarsReducer","compensationForRandom","maxWidth","maxHeight","backdropFilter","Grid","container","spacing","item","xs","wordChosen","onClick","opacity","GuesserWaitScreen","myPlayerIdReducer","exReducer","gsrReducer","currentRoundCountReducer","ConnectionErrorScreen","WarningIcon","sx","marginTop","variant","window","location","reload","ScoreBoardScreen","p1ScoreBoard","p1ScoreBoardReducer","p2ScoreBoard","p2ScoreBoardReducer","myId","rotated","rotatedReducer","timer","guessedCorrectly","guessedCorrectlyReducer","chosenWord","chosenWordReducer","cguesses","cguessesReducer","iAm","determineWhosWinning","myScore","opponentScore","getScoreBoard","dic","fontStyle","borderStyle","borderColor","borderRadius","borderWidth","a","b","cguessesSet","Set","cwordSet","toUpperCase","split","guessedAllChars","size","Array","from","every","element","has","getWinMethod","paddingTop","WordBoard","wordBoard","boardReducer","justifyContent","alignItems","minHeight","join","EachKey","used","thisChar","minWidth","Keyboard","fguesses","fguessesReducer","gamevars","usedList","firstRow","secondRow","thirdRow","_useState","useState","_useState2","_slicedToArray","enterGuess","setEnterGuess","handleSubmit","wordGuessed","handleToggle","handleHintRequest","eachChar","includes","marginLeft","WordInfoPanel","wrongGuesses","wrongGuessesReducer","changeWord","setChangeWord","_useState3","_useState4","hideWord","setHideWord","toggleChangeWord","wordInfoPanelScreen","changeWordScreen","newWord","EachHint","hintType","hintInfo","hintContent","hintId","allowClick","src","concat","alt","Hints","hints","hintsReducer","eachHint","GuesserGrid","exId","gsrId","currentRoundCount","GameWaitScreen","gameState","gameStateReducer","paddingBottom","LinearProgress","ConclusionPage","user","TimerAutomatic","initialSeconds","setSeconds","myInterval","setInterval","clearInterval","HintChoicePage","hintsPool","hintsPoolReducer","GameWelcomeScreen","onClickFunc","Game","isReady","setIsReady","myPlayerId","ex","roundState","roundStateReducer","disconnected","disconnectedReducer","hintRequested","hintRequestedReducer","handlePlayerReady","GameGrid","getServerResponse","url","pid","setFunc","toString","fetch","then","response","json","jsonObject","catch","error","console","Home","shallowEqual","playerCount","playerCountReducer","userId","username","signed_in","activated","activationSuccess","top_players_rows","setTopPlayerRows","top_words_rows","setTopWordRows","_useState5","_useState6","my_stat_row","setMyStatsRow","p","mt","class","role","People","GitHubIcon","href","xmlns","viewBox","d","fill","InfoRounded","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","row","border","scope","name","win_ratio","toFixed","games_played","word","frequency","avg_score","LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","FACEBOOK_AUTH_SUCCESS","FACEBOOK_AUTH_FAIL","LOGOUT","load_user","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","res","wrap","_context","prev","next","localStorage","getItem","headers","axios","get","process","sent","payload","t0","stop","_x","apply","arguments","connect","isAuthenticated","login","email","password","_ref4","_callee4","body","_context4","JSON","stringify","post","abrupt","_x4","formData","setFormData","googleSucc","googleAuthSuccessful","onChange","e","_objectSpread","_defineProperty","correctComb","setCorrectComb","Redirect","to","className","required","minLength","Link","signup","first_name","last_name","re_password","_ref5","_callee5","_context5","_x5","accountCreated","signUpSuccess","hasOwnProperty","getSignUpMessage","HowToPlay","verify","uid","token","_ref6","_callee6","_context6","_x6","match","verified","setVerified","params","reset_password","_ref7","_callee7","_context7","_x7","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","_ref8","_callee8","_context8","_x8","facebookAuthenticate","code","_ref9","_callee9","details","formBody","_context9","Object","keys","encodeURIComponent","_x9","useLocation","values","queryString","parse","search","googleAuthenticate","_ref2","_callee2","_context2","_x2","log","RedirectPage","mainMsg","linkName","undefined","action","_toConsumableArray","serverSocketReducer","send","defaultConfig","reverse","wordWasRandomReducer","defaultVals","initialState","access","refresh","allReducers","combineReducers","setItem","signUpFailMessage","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","redirect","setRedirect","logout_user","Fragment","id","checkAuthenticated","_ref3","_callee3","_context3","_x3","Navbar","SocketConnection","socket","WebSocket","onopen","onmessage","processMessage","onclose","wasClean","gsrInfo","exInfo","pool","num","msg_type","update_type","content","setCurrentRoundCount","board","setBoard","setFguesses","setHints","setHintRequested","setP1ScoreBoard","setP2ScoreBoard","setRotated","setRoundState","setWordWasRandom","setGuessedCorrectly","setWrongGuesses","setTimer","information_type","setMyPlayerId","notification_type","chat_type","sender","player_counts","current_player_gaming","current_game_counts","setPlayerCount","App","Provider","Router","Layout","Switch","Route","exact","path","Login","Signup","Facebook","Google","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","render","_Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.13a2c10f.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux';\n\nconst Timer = (props) => {\n\n    const seconds = useSelector(state => state.timerReducer);\n\n    return (\n        <div style={{\n            backgroundImage: \"linear-gradient(to right, rgba(255,255,255,1), rgba(0,0,0,0))\",\n            display: \"flex\",\n            padding: \"2pt\",\n            paddingLeft: \"5pt\",\n            marginBottom: props.noMargin ? \"0pt\" : \"5pt\",\n        }}>\n            <div>{props.leftText}&nbsp;</div> \n                    <div>\n                    <div style={\n                        seconds <= 3 ?\n                        {fontWeight: \"bolder\", color: \"red\"} :\n                        {fontWeight: \"bolder\"}\n                    }> {seconds}</div> \n                </div>\n            <div>&nbsp;{props.rightText}</div>\n        </div>\n    )\n}\n\nexport default Timer;","export const addNewMessage = (newMessage) => {\n    return {\n        type: \"ADD_NEW_MESSAGE\",\n        data: newMessage\n    }\n}\n\nexport const setServerWebsocket = (ws) => {\n    return {\n        type: \"SET_SERVER_SOCKET\",\n        data: ws\n    }\n}\n\nexport const sendMessage = (msg) => {\n    return {\n        type: \"SEND_MESSAGE\",\n        data: msg\n    }\n}\n\nexport const setGamevars = (gamevars) => {\n    return {\n        type: \"SET_GAMEVARS\",\n        data: gamevars\n    }\n}\n\nexport const setGameState = (num) => {\n    return {\n        type: \"SET_GAME_STATE\",\n        data: num\n    }\n}\n\nexport const setCurrentRoundCount = (num) => {\n    return {\n        type: \"SET_CURRENT_ROUND_COUNT\",\n        data: num\n    }\n}\n\nexport const setChosenWord = (chosenWord) => {\n    return {\n        type: \"SET_CHOSEN_WORD\",\n        data: chosenWord\n    }\n}\n\nexport const setHintsPool = (pool) => {\n    return {\n        type: \"SET_HINTS_POOL\",\n        data: pool\n    }\n}\n\nexport const setEx = (exInfo) => {\n    return {\n        type: \"SET_EX\",\n        data: exInfo\n    }\n}\n\nexport const setGsr = (gsrInfo) => {\n    return {\n        type: \"SET_GSR\",\n        data: gsrInfo\n    }\n}\n\nexport const setBoard = (board) => {\n    return {\n        type: \"SET_BOARD\",\n        data: board\n    }\n}\n\nexport const setCguesses = (data) => {\n    return {\n        type: \"SET_CGUESSES\",\n        data: data\n    }\n}\n\nexport const setFguesses = (data) => {\n    return {\n        type: \"SET_FGUESSES\",\n        data: data\n    }\n}\n\nexport const setHints = (data) => {\n    return {\n        type: \"SET_HINTS\",\n        data: data\n    }\n}\n\nexport const setHintRequested = (data) => {\n    return {\n        type: \"SET_HINT_REQUESTED\",\n        data: data\n    }\n}\n\nexport const setP1ScoreBoard = (data) => {\n    return {\n        type: \"SET_P1_SCORE_BOARD\",\n        data: data\n    }\n}\n\nexport const setP2ScoreBoard = (data) => {\n    return {\n        type: \"SET_P2_SCORE_BOARD\",\n        data: data\n    }\n}\n\nexport const setRotated = (data) => {\n    return {\n        type: \"SET_ROTATED\",\n        data: data\n    }\n}\n\nexport const setRoundState = (data) => {\n    return {\n        type: \"SET_ROUND_STATE\",\n        data: data\n    }\n}\n\nexport const setWordWasRandom = (data) => {\n    return {\n        type: \"SET_WORD_WAS_RANDOM\",\n        data: data\n    }\n}\n\nexport const setGuessedCorrectly = (data) => {\n    return {\n        type: \"SET_GUESSED_CORRECTLY\",\n        data: data\n    }\n}\n\nexport const setWrongGuesses = (data) => {\n    return {\n        type: \"SET_WRONG_GUESSES\",\n        data: data\n    }\n}\n\nexport const setMyPlayerId = (data) => {\n    return {\n        type: \"SET_MY_PLAYER_ID\",\n        data: data\n    }\n}\n\nexport const setDisconnected = (data) => {\n    return {\n        type: \"SET_DISCONNECTED\",\n        data: data\n    }\n}\n\nexport const setTimer = (data) => {\n    return {\n        type: \"SET_TIMER\",\n        data: data\n    }\n}\n\nexport const setPlayerCount = (data) => {\n    return {\n        type: \"SET_PLAYER_COUNT\",\n        data: data\n    }\n}\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Input, Button, Card } from '@mui/material';\nimport {\n    sendMessage\n} from \"../actions\"\n\nfunction Chatbox() {\n\n    const dispatch = useDispatch();\n    const allMessages = useSelector(state => state.allMessagesReducer);\n    const authInfo = useSelector(state => state.auth);\n    const chatContainer = React.createRef();\n\n    // const AlwaysScrollToBottom = () => {\n    //     const elementRef = useRef();\n    //     useEffect(() => elementRef.current.scrollIntoView({ behavior: 'smooth' }));\n    //     return <div ref={elementRef}/>;\n    // } \n\n    useEffect(() => {scrollToMyRef()})\n\n    const scrollToMyRef = () => {\n        const scroll =\n          chatContainer.current.scrollHeight -\n          chatContainer.current.clientHeight;\n        chatContainer.current.scrollTo(0, scroll);\n      };\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const chatMessage = event.target[0].value\n        dispatch(\n            sendMessage(\n                {\n                    \"msg_type\": \"chat\",\n                    \"content\": chatMessage,\n                    \"access_token\": authInfo[\"access\"],\n                }\n            )\n        )\n        event.target[0].value = \"\";\n    }\n\n    const renderAllMessages = () => {\n        let key = 100;\n        const colorMapping = {\n            \"warning\": \"red\",\n            \"success\": \"green\",\n            \"normal\": \"black\"\n        }\n        if (allMessages.length === 0) {\n            return <div style={{color: \"gray\", fontSize: \"small\", margin: \"5px\"}}>No messages...</div>\n        } else {\n            return (\n                allMessages.map(\n                    thisMessage => (\n                        <div \n                            key={key++}\n                            style={{\n                                color: colorMapping[thisMessage[\"chat_type\"]], \n                                fontSize: \"small\", \n                                margin: \"5px\"\n                            }}\n                        >\n                            {\"[\" + thisMessage[\"sender\"] + \"] \" + thisMessage[\"content\"]}\n                        </div>\n                    )\n                )\n            )\n        }\n    }\n\n    return (\n        <Card style={{backgroundColor:\"rgba(255,255,255,0.75)\"}}>\n            <div style={{display:\"block\"}}>\n                {/* <div style={{fontSize: \"small\", textAlign: \"center\", padding: \"5px\"}}>CHAT MESSAGES</div> */}\n                <div style={{\n                    fontSize: \"small\",\n                    textAlign: \"center\",\n                    margin: \"5px\"\n                }}>\n                    CHAT MESSAGES\n                </div>\n\n                <div style={{\n                    backgroundColor: \"white\",\n                    height: \"150px\",\n                    width: \"100%\",\n                    overflowY: \"scroll\",\n                    wordWrap: \"break-word\",\n                }} \n                    ref={chatContainer}\n                >\n                    {\n                        renderAllMessages()\n                    }\n                </div>\n\n                <div style={{textAlign: \"center\", width: \"100%\"}}>\n                    <form onSubmit={handleSubmit}>\n                        <Input placeholder=\"Chat here...\"/>\n                        <Button type=\"submit\" value=\"submit\">Send</Button>\n                    </form>\n                </div>\n            </div>\n        </Card>\n    )\n}\n\nexport default Chatbox;","import React from 'react';\nimport Timer from './timer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Grid, Card, Input } from '@mui/material';\nimport Chatbox from './chatbox';\nimport {\n    sendMessage\n} from \"../actions\"\n\nfunction WordEntryScreen() {\n\n    const dispatch = useDispatch();\n    const timeForChoosing = useSelector(state => state.gamevarsReducer)[\"TIME_FOR_CHOOSING\"];\n    const authInfo = useSelector(state => state.auth)\n    const compensationForRandom = useSelector(state => state.gamevarsReducer)[\"COMPENSATION_FOR_RANDOM\"];\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const wordChosen = event.target[0].value\n        dispatch(\n            sendMessage(\n                {\n                    \"msg_type\": \"action\",\n                    \"action_type\": \"choose_word\",\n                    \"content\": wordChosen,\n                    \"access_token\": authInfo[\"access\"]\n                }\n            )\n        )\n        event.target[0].value = \"\";\n    }\n    const handleRandom = () => {\n        dispatch(\n            sendMessage(\n                {\n                    \"msg_type\": \"action\",\n                    \"action_type\": \"choose_word\",\n                    \"content\": \"__RANDOM__\",\n                    \"access_token\": authInfo[\"access\"]\n                }\n            )\n        )\n    }\n\n    return (\n        <div style={{\n            // position: \"absolute\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundColor: \"rgba(0,0,0,0.4)\",\n            // zIndex: \"2\",\n            maxWidth: \"1000px\",\n            maxHeight: \"750px\",\n            backdropFilter: \"blur(50px)\"\n        }}>\n            <div style={{margin:\"50px\"}}>\n                <Grid container spacing={1}>\n\n                    <Grid item xs={12}>\n                        <Timer\n                                seconds={timeForChoosing}\n                                leftText={\"A random word will be chosen in\"}\n                                rightText={\"seconds...\"}\n                            />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div style={{\n                                fontSize: \"xx-large\",\n                                fontWeight: \"bolder\",\n                                color: \"white\"\n                                }}>\n                                    YOU'RE THE EXECUTIONER\n                            </div>\n                            <div style={{color: \"white\"}}>Enter a word for the Guesser to guess...</div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <hr></hr>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card style={{backgroundColor: \"rgba(255,255,255,0.75)\", padding: \"25px\"}}>\n                            <form onSubmit={handleSubmit}>\n                                    <Input placeholder=\"Enter your word here...\" />\n                                    <Button type=\"submit\" value=\"submit\">SUBMIT</Button>\n                                    <Button onClick={handleRandom}>CHOOSE RANDOM*</Button>\n                                    <p style={{fontSize:\"small\", opacity:\"75%\"}}>* Your opponent will be compensated for {compensationForRandom} points if you choose random.</p>\n                            </form>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={5}>\n                            <Chatbox/>\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Card style={{backgroundColor: \"rgba(255,255,255,0.4)\", height: \"100%\"}}>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default WordEntryScreen;","import React from 'react';\nimport Timer from './timer';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Grid, Card, Input } from '@mui/material';\nimport Chatbox from './chatbox';\n\nfunction GuesserWaitScreen() {\n\n    const dispatch = useDispatch();\n    const timeForChoosing = useSelector(state => state.gamevarsReducer)[\"TIME_FOR_CHOOSING\"];\n    const compensationForRandom = useSelector(state => state.gamevarsReducer)[\"COMPENSATION_FOR_RANDOM\"];\n    const myId = useSelector(state => state.myPlayerIdReducer)[\"id\"];\n    const exId = useSelector(state => state.exReducer);\n    const gsrId = useSelector(state => state.gsrReducer);\n    const currentRoundCount = useSelector(state => state.currentRoundCountReducer);\n\n    return (\n        <div style={{\n            // position: \"absolute\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundColor: \"rgba(0,0,0,0.4)\",\n            // zIndex: \"2\",\n            maxWidth: \"1000px\",\n            maxHeight: \"750px\",\n            backdropFilter: \"blur(50px)\"\n        }}>\n            <div style={{margin:\"50px\"}}>\n                <Grid container spacing={1}>\n\n                    <Grid item xs={12}>\n                        <Timer\n                                seconds={timeForChoosing}\n                                rightText={\"seconds left for the Executioner to choose...\"}\n                            />\n                    </Grid>\n                    <Grid item xs={12}>\n                        <div style={{\n                                fontSize: \"xx-large\",\n                                fontWeight: \"bolder\",\n                                color: \"white\"\n                                }}>\n                                    YOU'RE THE GUESSER\n                            </div>\n                            <div style={{color: \"white\"}}>Please wait for the Executioner to make a word choice.</div>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <hr></hr>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Card style={{backgroundColor: \"rgba(255,255,255,0.75)\", padding: \"50px\"}}>\n                        </Card>\n                    </Grid>\n\n                    <Grid item xs={5}>\n                        <Chatbox/>\n                    </Grid>\n                    <Grid item xs={7}>\n                        <Card style={{backgroundColor: \"rgba(255,255,255,0.4)\", height: \"100%\"}}>\n                        </Card>\n                    </Grid>\n\n                </Grid>\n            </div>\n        </div>\n    )\n}\n\nexport default GuesserWaitScreen;","import React from 'react';\nimport Timer from './timer';\nimport WarningIcon from '@mui/icons-material/Warning';\nimport { useSelector } from 'react-redux';\nimport { Button } from '@mui/material';\n\nfunction ConnectionErrorScreen() {\n\n    // let serverSocket = useSelector(state => state.serverSocketReducer);\n    // let gameState = useSelector(state => state.gameStateReducer);\n    // let gamevars = useSelector(state => state.gamevarsReducer);\n\n    return (\n        // getMessage()\n        <div style={{\n            // position: \"absolute\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundImage: \"linear-gradient(to left top, rgba(0,0,0,0.5), rgba(255,0,0,0.75))\",\n            // zIndex: \"2\",\n            // maxWidth: \"1000px\",\n            // maxHeight: \"750px\",\n            backdropFilter: \"blur(25px)\",\n        }}>\n            <div style={{margin:\"50px\"}}>\n                <div style={{color: \"white\", display: \"block\", width: \"100%\", height: \"100%\"}}>\n                    <div>\n                        <WarningIcon sx={{ fontSize: 100 }}/>\n                        <div style={{fontSize: \"xx-large\", marginTop: \"20px\", fontWeight:\"bolder\"}}>Game server connection failure.</div>\n                        <div style={{fontSize: \"medium\"}}>The server or your Internet might be down.</div>\n                    </div>\n                    <br/>\n                    <br/>\n                    <Button\n                        style={{\n                            color:\"white\"\n                        }}\n                        variant=\"outlined\"\n                        onClick={  function reloadPage() {window.location.reload(false)} }>RETRY CONNECTION</Button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ConnectionErrorScreen;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Grid, Card } from '@mui/material';\nimport Chatbox from './chatbox';\n\nfunction ScoreBoardScreen() {\n\n    const p1ScoreBoard = useSelector(state => state.p1ScoreBoardReducer);\n    const p2ScoreBoard = useSelector(state => state.p2ScoreBoardReducer);\n    const myId = useSelector(state => state.myPlayerIdReducer)[\"id\"];\n    const rotated = useSelector(state => state.rotatedReducer);\n    const timer = useSelector(state => state.timerReducer);\n    const guessedCorrectly = useSelector(state => state.guessedCorrectlyReducer);\n    const chosenWord = useSelector(state => state.chosenWordReducer);\n    const cguesses = useSelector(state => state.cguessesReducer);\n\n    const iAm = myId === p1ScoreBoard[\"ID\"] ? \"p1\" : \"p2\";\n\n    const setsAreEqual = (a, b) => {\n        if (a.size !== b.size) {\n          return false;\n        }\n      \n        return Array.from(a).every(element => {\n          return b.has(element);\n        });\n      }\n\n    const getWinMethod = () => {\n        if (chosenWord === null) {\n            return (<div></div>)\n        }\n        const cguessesSet = new Set(cguesses);\n        const cwordSet = new Set(chosenWord.toUpperCase().split(''));\n        const guessedAllChars = setsAreEqual(cguessesSet, cwordSet);\n        if (guessedCorrectly) {\n            return \"The Guesser entered a correct word guess.\";\n        } else if (guessedAllChars) {\n            return \"The Guesser guessed all correct letters.\";\n        } else {\n            return \"The Guesser failed to guess the word in time.\"\n        }\n    }\n\n    const determineWhosWinning = () => {\n        const myScore = iAm === \"p1\" ? p1ScoreBoard[\"GAME_TOTAL\"] : p2ScoreBoard[\"GAME_TOTAL\"];\n        const opponentScore = iAm === \"p1\" ? p2ScoreBoard[\"GAME_TOTAL\"] : p1ScoreBoard[\"GAME_TOTAL\"];\n        if (myScore === opponentScore) {\n            return \"TIE\"\n        } else if (myScore < opponentScore) {\n            return \"LOSING\"\n        } else {\n            return \"WINNING\"\n        }\n    }\n\n    const getWinLoseInfo = () => {\n        if (rotated) {\n            return (\n                <div style={{margin: \"50px\"}}>\n                    <div style={{textAlign:\"center\", color:\"white\", fontSize:\"x-large\", fontWeight:\"normal\"}}>\n                        {\n                            determineWhosWinning() === \"TIE\" ? \"The game is at a tie.\" : (determineWhosWinning() === \"WINNING\" ? \"You are winning.\" : \"Your opponent is winning.\")\n                        }\n                    </div>\n                    <div style={{textAlign:\"center\", color:\"white\", fontSize:\"large\", fontWeight:\"lighter\"}}>\n                        Game will continue in {timer}...\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div style={{textAlign:\"center\", color:\"white\", fontSize:\"large\", fontWeight:\"normal\", margin: \"50px\"}}>\n                    Game will continue in {timer}...\n                </div>\n            )\n        }\n    }\n\n    const getScoreBoard = (dic) => {\n        if (dic[\"DISCONNECTED\"]) {\n            return (\n                <div style={{\n                    color: \"red\",\n                    height: \"100%\",\n                    padding: \"10px\",\n                    fontSize: \"small\",\n                    textAlign: \"center\",\n                    fontWeight: \"bolder\"\n                }}>\n                    PLAYER DISCONNECTED\n                </div>\n            )\n        }\n        if (dic[\"FINISHED_GUESSING\"] === true) {\n            return (\n                <div style={{\n                    color: \"white\",\n                }}>\n                        <Grid container spacing={0.1}>\n                            <Grid item xs={8}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.10)\", padding:\"5px\", textAlign: \"right\"}}>\n                                    PROGRESSION SCORE\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.10)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                    {dic[\"PROGRESSION\"]}\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={8}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.0)\", padding:\"5px\", textAlign: \"right\"}}>\n                                    BASE SCORE\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.0)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                    {dic[\"BASE\"]}\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={8}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.10)\", padding:\"5px\", textAlign: \"right\"}}>\n                                    BONUS\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.10)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                    {dic[\"BONUS\"]}\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={8}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.0)\", padding:\"5px\", textAlign: \"right\"}}>\n                                    PENALTY\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.0)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                    {dic[\"PENALTY\"]}\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={8}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.10)\", padding:\"5px\", textAlign: \"right\"}}>\n                                    COMPENSATION\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.10)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                    {dic[\"COMPENSATION\"]}\n                                </div>\n                            </Grid>\n\n                            <Grid item xs={12}>\n                            </Grid>\n\n                            <Grid item xs={8}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.0)\", padding:\"5px\", textAlign: \"right\"}}>\n                                    ROUND TOTAL\n                                </div>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div style={{backgroundColor:\"rgba(255,255,255,0.0)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                    {dic[\"ROUND_TOTAL\"]}\n                                </div>\n                            </Grid>\n\n                        </Grid>\n                </div>\n            )\n        } else if (dic[\"FINISHED_GUESSING\"] === false) {\n            return (\n                <div style={{\n                    color: \"rgba(255,255,255,0.5)\",\n                    height: \"100%\",\n                    padding: \"10px\",\n                    fontSize: \"small\",\n                    fontStyle:\"italic\",\n                    textAlign: \"center\",\n                }}>\n                    Hasn't played as the Guesser yet...\n                </div>\n            )\n        }\n    }\n\n    return (\n        // getMessage()\n        <div style={{\n            // position: \"absolute\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundColor: \"rgba(0,0,0,0.4)\",\n            // zIndex: \"2\",\n            maxWidth: \"1000px\",\n            maxHeight: \"750px\",\n            backdropFilter: \"blur(50px)\"\n        }}>\n            <div style={{margin:\"50px\"}}>\n                <Grid container spacing={1}>\n\n                    <Grid item xs={12}>\n                        <div style={{textAlign:\"center\", backgroundColor: \"rgba(0,0,0,0.5)\"}}>\n                            <div style={{\n                                color: \"white\",\n                                fontSize: \"small\",\n                                backgroundColor: \"rgba(0,0,0,0.5)\",\n                                padding: \"5px\",\n                            }}>\n                                CORRECT WORD\n                            </div>\n                            <div style={{\n                                color: \"white\",\n                                fontSize: \"xx-large\",\n                                fontWeight: \"bolder\",\n                                padding: \"10px\"\n                            }}>\n                                {chosenWord}\n                            </div>\n                        </div>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <div style={{textAlign:\"center\", backgroundColor: \"rgba(0,0,0,0.5)\"}}>\n                                <div style={{\n                                    color: \"white\",\n                                    fontSize: \"small\",\n                                    backgroundColor: \"rgba(0,0,0,0.5)\",\n                                    padding: \"5px\",\n                                }}>\n                                    {p1ScoreBoard[\"NAME\"]}'s SCORE\n                                </div>\n                            </div>\n                            <div style={{backgroundColor: \"rgba(0,0,0,0.5)\"}}>\n                                {getScoreBoard(\n                                    p1ScoreBoard\n                                )}\n\n                                <Grid container spacing={0.1} style={ (p1ScoreBoard[\"GAME_TOTAL\"] > p2ScoreBoard[\"GAME_TOTAL\"] && rotated) ?\n                                    {color: \"white\", \n                                    borderStyle:\"solid\", \n                                    borderColor: \"red\", \n                                    borderRadius:\"5px\", \n                                    borderWidth: \"3pt\"\n                                    } : {}}>\n                                        <Grid item xs={8}>\n                                        <div style={{backgroundColor:\"rgba(255,255,255,0.50)\", padding:\"5px\", textAlign: \"right\", fontWeight:\"bolder\"}}>\n                                            GAME TOTAL\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        <div style={{backgroundColor:\"rgba(255,255,255,0.50)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                            {p1ScoreBoard[\"GAME_TOTAL\"]}\n                                        </div>\n                                    </Grid>\n                                </Grid>\n\n                            </div>\n                    </Grid>\n\n                    <Grid item xs={6}>\n                        <div style={{textAlign:\"center\", backgroundColor: \"rgba(0,0,0,0.5)\"}}>\n                                <div style={{\n                                    color: \"white\",\n                                    fontSize: \"small\",\n                                    backgroundColor: \"rgba(0,0,0,0.5)\",\n                                    padding: \"5px\",\n                                }}>\n                                    {p2ScoreBoard[\"NAME\"]}'s SCORE\n                                </div>\n                            </div>\n                            <div style={{backgroundColor: \"rgba(0,0,0,0.5)\"}}>\n                                {getScoreBoard(\n                                    p2ScoreBoard\n                                )}\n\n                            <Grid container spacing={0.1} style={ (p2ScoreBoard[\"GAME_TOTAL\"] > p1ScoreBoard[\"GAME_TOTAL\"] && rotated) ?\n                                    {color: \"white\", \n                                    borderStyle:\"solid\", \n                                    borderColor: \"red\", \n                                    borderRadius:\"5px\", \n                                    borderWidth: \"3pt\"\n                                    } : {}}>                                        \n                                    <Grid item xs={8}>\n                                        <div style={{backgroundColor:\"rgba(255,255,255,0.50)\", padding:\"5px\", textAlign: \"right\", fontWeight:\"bolder\"}}>\n                                            GAME TOTAL\n                                        </div>\n                                    </Grid>\n                                    <Grid item xs={4}>\n                                        <div style={{backgroundColor:\"rgba(255,255,255,0.50)\", padding:\"5px\", textAlign: \"left\", fontWeight: \"bolder\"}}>\n                                            {p2ScoreBoard[\"GAME_TOTAL\"]}\n                                        </div>\n                                    </Grid>\n                                </Grid>\n\n                            </div>\n                    </Grid>\n\n                    <Grid item xs={5}>\n                        <Chatbox/>\n                    </Grid>\n\n                    <Grid item xs={7}>\n                        <Card style={{backgroundColor:\"rgba(0,0,0,0.75)\", height:\"100%\"}}>\n                            <div style={{color:\"white\", marginTop:\"20px\", textAlign: \"center\", fontSize:\"large\", fontWeight: \"bolder\"}}>\n                                {getWinMethod()}\n                                <hr/>\n                            </div>\n                            {getWinLoseInfo()}\n                        </Card>\n                    </Grid>\n\n\n\n                </Grid>\n                <div style={{display: \"flex\", paddingTop: \"5px\", color: \"white\", opacity: \".5\"}}>\n                        <div style={{fontWeight: \"bolder\", fontSize: \"large\"}}>H A N G M _ N</div>\n                        <div style={{fontWeight: \"lighter\", fontSize: \"medium\"}}>ONLINE</div>\n                    </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ScoreBoardScreen;","import React from 'react'\nimport { useSelector } from 'react-redux';\n\nfunction WordBoard() {\n\n    let wordBoard = useSelector(state => state.boardReducer);\n\n    return (\n        <div style={{\n            color: \"black\", \n            backgroundColor: \"white\",\n            textAlign: \"center\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            fontSize: \"xx-large\",\n            minHeight: \"150px\",\n            maxHeight: \"250px\",\n            height: \"100%\",\n            }}>\n            {wordBoard.join(\" \")}\n        </div>\n    )\n}\n\nexport default WordBoard;","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendMessage } from \"../actions\"\n\nfunction EachKey(props) {\n\n    const authInfo = useSelector(state => state.auth)\n    const dispatch = useDispatch();\n    const handleClick = () => {\n        if (!props.used) {\n            const msg = {\n                \"msg_type\": \"action\",\n                \"action_type\": \"guess_letter\",\n                \"content\": props.thisChar,\n                \"access_token\": authInfo[\"access\"]\n            }\n            dispatch(sendMessage(msg))\n        }\n    }\n\n    return (\n        <div\n            onClick={ handleClick }\n            style={{\n                backgroundColor: \"rgba(0, 0, 0, 0.75)\",\n                opacity: props.used ? \"25%\" : \"100%\",\n                color: \"white\",\n                minWidth: \"10px\",\n                height: \"50px\",\n                maxWidth: \"50px\",\n                borderRadius: \"5px\",\n                textAlign: \"center\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: \"1px\",\n                width: \"100%\",\n            }}\n        >\n            {props.thisChar}\n        </div>\n    )\n}\n\nexport default EachKey;","import { React, useState } from 'react'\nimport EachKey from './eachKey';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Input, Card } from '@mui/material';\nimport {\n    sendMessage\n} from \"../actions\"\n\nfunction Keyboard() {\n\n    const dispatch = useDispatch();\n    const cguesses = useSelector(state => state.cguessesReducer);\n    const fguesses = useSelector(state => state.fguessesReducer);\n    const gamevars = useSelector(state => state.gamevarsReducer);\n    const authInfo = useSelector(state => state.auth);\n    const usedList = cguesses + fguesses;\n    const firstRow = [\"Q\",\"W\",\"E\",\"R\",\"T\",\"Y\",\"U\",\"I\",\"O\",\"P\"];\n    const secondRow = [\"A\",\"S\",\"D\",\"F\",\"G\",\"H\",\"J\",\"K\",\"L\"];\n    const thirdRow = [\"Z\",\"X\",\"C\",\"V\",\"B\",\"N\",\"M\"]\n    let key = 0;\n\n    const [enterGuess, setEnterGuess] = useState(false)\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const wordGuessed = event.target[0].value\n        dispatch(\n            sendMessage(\n                {\n                    \"msg_type\": \"action\",\n                    \"action_type\": \"guess_word\",\n                    \"content\": wordGuessed,\n                    \"access_token\": authInfo[\"access\"]\n                }\n            )\n        )\n        event.target[0].value = \"\";\n        handleToggle();\n    }\n\n    const handleToggle = () => {\n        const currState = enterGuess;\n        setEnterGuess(!currState);\n    }\n\n    const guessEntranceScreen = () => {\n        return (\n            <Card style={{backgroundColor:\"rgba(255,255,255,0.9)\"}}>\n                <div style={{fontSize: \"small\", marginTop:\"10px\", textAlign:\"center\"}}>WORD GUESS ENTRY</div>\n                <hr/>\n                <div style={{color:\"black\", padding:\"25px\"}}>\n                    <form onSubmit={handleSubmit}>\n                        <Input color=\"primary\" placeholder=\"Enter your guess here...\" />\n                        <Button type=\"submit\" value=\"submit\">SUBMIT</Button>\n                        <Button onClick={handleToggle}>GO BACK</Button>\n                        <p style={{fontSize:\"small\", opacity:\"75%\"}}>* You will be penalized for {-gamevars[\"PENALTY_FOR_FALSE_GUESS\"]} points if your guess is wrong.<br/>Please double check to ensure that your spelling is correct.</p>\n                    </form>\n                </div>\n            </Card>\n        )\n    }\n\n    const handleHintRequest = () => {\n        dispatch(\n            sendMessage(\n                {\n                    \"msg_type\": \"action\",\n                    \"action_type\": \"request_hint\",\n                    \"content\": \"None\",\n                    \"access_token\": authInfo[\"access\"]\n                }\n            )\n        )\n    }\n\n    const keyboardScreen = () => {\n        return (\n            <div style={{padding: \"10px\"}}>\n            <div style={{display: \"flex\"}}>\n                {\n                    firstRow.map(\n                        eachChar => (\n                            <EachKey \n                                key={key++}\n                                used={usedList.includes(eachChar) ? true : false}\n                                thisChar={eachChar}\n                            />\n                        )\n                    )\n                }\n            </div>\n            <div style={{display: \"flex\", marginLeft: \"10px\"}}>\n                {\n                    secondRow.map(\n                        eachChar => (\n                            <EachKey \n                                key={key++}\n                                used={usedList.includes(eachChar) ? true : false}\n                                thisChar={eachChar}\n                            />\n                        )\n                    )\n                }\n            </div>\n            <div style={{display: \"flex\", marginLeft: \"30px\"}}>\n                {\n                    thirdRow.map(\n                        eachChar => (\n                            <EachKey \n                                key={key++}\n                                used={usedList.includes(eachChar) ? true : false}\n                                thisChar={eachChar}\n                            />\n                        )\n                    )\n                }\n            </div>\n            <div style={{margin: \"25px\", display:\"flex\", justifyContent: \"space-between\"}}>\n                <Button variant=\"contained\" size=\"medium\" color=\"primary\" onClick={handleToggle}>\n                    Enter word guess\n                </Button>\n                <Button variant=\"contained\" size=\"medium\" color=\"warning\" onClick={handleHintRequest}>\n                    Request Hint (-25 PTS.)\n                </Button>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            {\n                enterGuess ? guessEntranceScreen() : keyboardScreen()\n            }\n        </div>\n    )\n}\n\nexport default Keyboard;","import { React, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Input, Card } from '@mui/material';\nimport {\n    sendMessage\n} from \"../actions\"\n\nfunction WordInfoPanel() {\n\n    const dispatch = useDispatch();\n    const chosenWord = useSelector(state => state.chosenWordReducer);\n    const authInfo = useSelector(state => state.auth);\n    const wrongGuesses = useSelector(state => state.wrongGuessesReducer);\n    const fguesses = useSelector(state => state.fguessesReducer);\n    const gamevars = useSelector(state => state.gamevarsReducer);\n\n    const [changeWord, setChangeWord] = useState(false)\n    const [hideWord, setHideWord] = useState(false)\n\n    const toggleChangeWord = () => {\n        const prev = changeWord\n        setChangeWord(!prev)\n    }\n\n    const toggleHideWord = () => {\n        const prev = hideWord\n        setHideWord(!prev)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        const newWord = event.target[0].value\n        dispatch(\n            sendMessage(\n                {\n                    \"msg_type\": \"action\",\n                    \"action_type\": \"change_word\",\n                    \"content\": newWord,\n                    \"access_token\": authInfo[\"access\"],\n                }\n            )\n        )\n        event.target[0].value = \"\";\n        toggleChangeWord();\n    }\n\n    const wordInfoPanelScreen = (\n            <div style={{color: 'white', padding: \"25px\"}}>\n                <div style={{fontSize:\"small\", backgroundColor: \"rgba(0,0,0,0.5)\", padding:\"3px\", opacity:\".75\"}}>CORRECT WORD</div>\n                <div style={{fontSize:\"x-large\", marginLeft: \"10px\"}}>{hideWord ? \"[HIDDEN]\" : (chosenWord == null ? \"Waiting...\" : chosenWord)}</div>\n                <br/>\n                <div style={{fontSize:\"small\", backgroundColor: \"rgba(0,0,0,0.5)\", padding:\"3px\", opacity:\".75\"}}>INCORRECT CHARACTER GUESSES</div>\n                <div style={{fontSize: fguesses.length === 0 ? \"small\" : \"large\", marginLeft: \"10px\"}}>{fguesses.length === 0 ? \"None so far...\" : fguesses.join(\" \")}</div>\n                <br/>\n                <div style={{fontSize:\"small\", backgroundColor: \"rgba(0,0,0,0.5)\", padding:\"3px\", opacity:\".75\"}}>INCORRECT WORD GUESSES</div>\n                <div style={{fontSize: wrongGuesses.length === 0 ? \"small\" : \"large\", marginLeft: \"10px\"}}>{wrongGuesses.length === 0 ? \"None so far...\" : wrongGuesses.join(\" \")}</div>\n                <br></br>\n                <Button onClick={toggleHideWord} variant=\"contained\">{hideWord ? \"UNHIDE WORD\" : \"HIDE WORD\"}</Button>\n                <Button onClick={toggleChangeWord} variant=\"contained\" style={{marginLeft:\"5px\"}}>CHANGE WORD</Button>\n            </div>\n    )\n\n    const changeWordScreen = (\n        <Card style={{backgroundColor:\"rgba(255,255,255,0.9)\"}}>\n            <div style={{fontSize: \"small\", marginTop:\"10px\", textAlign:\"center\"}}>CHANGE WORD</div>\n            <hr/>\n            <div style={{color:\"black\", padding:\"25px\"}}>\n                <form onSubmit={handleSubmit}>\n                    <Input color=\"primary\" placeholder=\"Enter new word here...\" />\n                    <Button type=\"submit\" value=\"submit\">SUBMIT</Button>\n                    <Button onClick={toggleChangeWord}>GO BACK</Button>\n                    <p style={{fontSize:\"small\", opacity:\"75%\"}}>\n                        Your new word must fit the game's current progress and cannot be a word that has already been guessed incorrectly by the Guesser.\n                        <br/>\n                        If your word change is successful, the Guesser will receive {gamevars[\"OVERTIME_FOR_CHANGE\"]} more seconds for guessing.\n                    </p>\n                </form>\n            </div>\n        </Card>\n    )\n    \n\n    return (\n        <div>\n            {\n                changeWord ? changeWordScreen : wordInfoPanelScreen\n            }\n        </div>\n    )\n}\n\nexport default WordInfoPanel;","import { React } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sendMessage } from \"../actions\"\nimport { Card } from '@mui/material';\n\nfunction EachHint(props) {\n\n    const dispatch = useDispatch();\n    const hintType = props.hintInfo[\"hint_type\"]\n    const hintContent = props.hintInfo[\"content\"]\n    const hintId = props.hintInfo[\"id\"]\n    const authInfo = useSelector(state => state.auth)\n\n    const handleClick = () => {\n            const msg = {\n                \"msg_type\": \"action\",\n                \"action_type\": \"choose_hint\",\n                \"content\": hintId,\n                \"access_token\": authInfo[\"access\"]\n            }\n            dispatch(sendMessage(msg));\n    }\n\n    const renderHintContent = () => {\n        if (hintType === \"image\") {\n            return (\n                <div style={{margin: \"10px\"}}>\n                    <img style={{height: \"150px\"}}src={`data:image/png;base64,${hintContent}`} alt=\"hintImage\"/>\n                </div>\n            )\n        } else {\n            return (\n                <div style={{margin: \"25px\"}}>\n                    <div style={{fontSize: \"large\", fontWeight: \"bolder\"}}>{hintContent}</div>\n                </div>\n            )\n        }\n\n    }\n\n    return (\n        <Card style={{margin: \"5px\", backgroundColor:\"khaki\"}} onClick={props.allowClick ? handleClick : \"\"}>\n            {\n                renderHintContent()\n            }\n        </Card>\n    )\n}\n\nexport default EachHint;","import React, {useRef, useEffect} from 'react'\nimport EachHint from './eachHint';\nimport { useSelector } from 'react-redux';\n\nfunction Hints() {\n\n    const hints = useSelector(state => state.hintsReducer);\n    const AlwaysScrollToBottom = () => {\n        const elementRef = useRef();\n        useEffect(() => elementRef.current.scrollIntoView({ behavior: 'smooth' }));\n        return <div ref={elementRef}/>;\n    } \n\n\n    return (\n        <div>\n            <div style={{textAlign: \"center\", paddingTop: \"3px\", fontSize:\"small\"}}>\n                HINTS\n            </div>\n            <hr/>\n            <div style={{\n                    backgroundColor: \"white\",\n                    height: \"150px\",\n                    width: \"100%\",\n                    overflowY: \"scroll\",\n                    wordWrap: \"break-word\",\n                }}>\n                    {\n                        hints.map(\n                            eachHint => (\n                                <EachHint\n                                    allowClick={false}\n                                    hintInfo={eachHint}\n                                    key={eachHint[\"id\"]}\n                                />\n                            )\n                        )\n                    }\n            </div>\n        </div>\n    )\n\n}\n\nexport default Hints;","import React from 'react';\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport Timer from './timer';\nimport WordBoard from './wordBoard';\nimport Keyboard from './keyboard';\nimport WordInfoPanel from './wordInfoPanel';\nimport Chatbox from './chatbox';\nimport Hints from './hints';\nimport { useSelector } from 'react-redux';\n\nfunction GuesserGrid() {\n\n    let myId = useSelector(state => state.myPlayerIdReducer)[\"id\"];\n    let exId = useSelector(state => state.exReducer)[\"id\"];\n    let gsrId = useSelector(state => state.gsrReducer)[\"id\"];\n    let currentRoundCount = useSelector(state=> state.currentRoundCountReducer);\n    let gamevars = useSelector(state=> state.gamevarsReducer);\n\n    return (\n        <Grid container spacing={1}>\n          <Grid item xs={12}>\n            <Timer rightText=\"seconds remaining...\" seconds={gamevars[\"TIME_FOR_GUESSING\"]}></Timer>\n          </Grid>\n          \n          <Grid item xs={5}>\n            <div style={{display: \"flex\", color: \"white\", fontSize: \"xx-large\"}}>\n                <div style={{fontWeight: \"bolder\"}}>ROUND {currentRoundCount}&nbsp;</div><div style={{fontWeight:\"lighter\"}}>of 3</div>\n            </div>\n            <div style={{fontSize: \"medium\", fontWeight: \"normal\", color: \"white\"}}>You're currently playing as the {myId === exId ? \"Executioner\" : \"Guesser\"}...</div>\n          </Grid>\n\n          <Grid item xs={3}>\n            {/* <Card style={{height: \"90%\", width: \"100%\"}}>Player 1 Info.</Card> */}\n          </Grid>\n\n          <Grid item xs={1}>\n            {/* <Card style={{height: \"90%\", width: \"100%\"}}>VS.</Card> */}\n          </Grid>\n\n          <Grid item xs={3}>\n            {/* <Card style={{height: \"90%\", width: \"100%\"}}>Player 2 Info.</Card> */}\n          </Grid>\n\n          <Grid item xs={12}>\n            <hr></hr>\n          </Grid>\n\n          <Grid item xs={4}>\n            <Card style={{height: \"100%\", width: \"100%\"}}>\n              <Hints/>\n            </Card>\n          </Grid>\n          <Grid item xs={8}>\n            <Card style={{height: \"100%\", width: \"100%\"}}>\n                <WordBoard/>\n            </Card>\n          </Grid>\n\n          <Grid item xs={5}>\n            <Chatbox/>\n          </Grid>\n          <Grid item xs={7}>\n            <Card style={{backgroundColor: \"rgba(0,0,0,0.4)\", height: \"100%\"}}>\n              {\n                myId === gsrId ? <Keyboard/> : <WordInfoPanel/>\n              }\n            </Card>\n          </Grid>\n\n        </Grid>\n    )\n}\n\nexport default GuesserGrid;","import React from 'react';\nimport { LinearProgress } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nfunction GameWaitScreen() {\n\n    const myId = useSelector(state => state.myPlayerIdReducer);\n    const gameState = useSelector(state => state.gameStateReducer);\n    const gamevars = useSelector(state => state.gamevarsReducer);\n\n    return (\n        <div style={{\n            // position: \"absolute\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundImage: \"linear-gradient(to left top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))\",\n            // zIndex: \"2\",\n            maxWidth: \"1000px\",\n            maxHeight: \"750px\",\n            backdropFilter: \"blur(50px)\"\n        }}>\n            <div style={{margin:\"50px\"}}>\n                <div style={{color: \"white\", display: \"block\", width: \"100%\", height: \"100%\"}}>\n                    <div style={{display: \"flex\", paddingTop: \"25px\", paddingBottom: \"25px\"}}>\n                        <div style={{fontWeight: \"bolder\", fontSize: \"xxx-large\"}}>H A N G M _ N</div>\n                        <div style={{fontWeight: \"lighter\", fontSize: \"xxx-large\"}}>ONLINE</div>\n                    </div>\n                    <div>\n                        <LinearProgress color=\"success\" />\n                        <div style={{fontSize: \"x-large\", fontWeight:\"bold\", marginTop: \"10pt\"}}>Hello {myId[\"name\"]}!</div>\n                        <div style={{fontSize: \"medium\", fontWeight: \"light\"}}>\n                            {\n                                (gameState === gamevars[\"GAME_STATE_WAITING\"]) ? \"Waiting for an opponent to connect...\" : \"Opponent found! Game will start shortly...\"\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GameWaitScreen;","import { Button } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Grid } from '@mui/material';\nimport {\n    sendMessage\n} from \"../actions\"\n\nfunction ConclusionPage() {\n\n    const dispatch = useDispatch();\n    const p1ScoreBoard = useSelector(state => state.p1ScoreBoardReducer);\n    const p2ScoreBoard = useSelector(state => state.p2ScoreBoardReducer);\n    const myId = useSelector(state => state.myPlayerIdReducer)[\"id\"];\n    const authInfo = useSelector(state => state.auth);\n    const user = authInfo[\"user\"]\n\n    const determineWhosWinning = () => {\n        const iAm = (myId === p1ScoreBoard[\"ID\"]) ? \"p1\" : \"p2\";\n        const myScore = iAm === \"p1\" ? p1ScoreBoard[\"GAME_TOTAL\"] : p2ScoreBoard[\"GAME_TOTAL\"];\n        const opponentScore = iAm === \"p1\" ? p2ScoreBoard[\"GAME_TOTAL\"] : p1ScoreBoard[\"GAME_TOTAL\"];\n        if (myScore === opponentScore) {\n            return \"TIE\"\n        } else if (myScore < opponentScore) {\n            return \"LOSING\"\n        } else {\n            return \"WINNING\"\n        }\n    }\n\n    const handleOnClick = () => {\n        dispatch(sendMessage(\n            {\n                \"msg_type\": \"join\",\n                \"is_guest\": user === null ? true : false,\n                \"player_id\": user !== null ? user[\"id\"] : 0,      // 0 is guest.\n                \"player_name\": user !== null ? user[\"first_name\"] : null,\n                \"game_id\": \"__ANY__\",\n                \"access_token\": authInfo[\"access\"]\n            }\n        ))\n    }\n\n    return (\n        <div style={{\n            // position: \"absolute\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundImage: \"linear-gradient(to left top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))\",\n            // zIndex: \"2\",\n            maxWidth: \"1000px\",\n            maxHeight: \"750px\",\n            backdropFilter: \"blur(50px)\"\n        }}>\n            <div style={{margin:\"50px\"}}>\n                <div style={{color: \"white\", display: \"block\", width: \"100%\", height: \"100%\"}}>\n                    <div style={{display: \"flex\", paddingTop: \"25px\", paddingBottom: \"5px\"}}>\n                        <div style={{fontWeight: \"bolder\", fontSize: \"x-large\"}}>H A N G M _ N</div>\n                        <div style={{fontWeight: \"lighter\", fontSize: \"large\"}}>ONLINE</div>\n                    </div>\n                    <div>\n                        <hr></hr>\n                        <div style={{fontSize: \"x-large\", fontWeight:\"bold\", marginTop: \"10pt\"}}>GAME CONCLUDED</div>\n                        <div style={{fontSize: \"medium\", fontWeight: \"light\"}}>Here are the results.</div>\n                    </div>\n\n                    <div style={{marginTop: \"10pt\"}}>\n                        <Grid container spacing={0.1}>\n                            <Grid item xs={6}>\n                                <div style={{backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"10px\", textAlign: \"center\"}}>\n                                    {p1ScoreBoard[\"NAME\"]}'s FINAL SCORE\n                                </div>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <div style={{backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"10px\", textAlign: \"center\"}}>\n                                    {p2ScoreBoard[\"NAME\"]}'s FINAL SCORE\n                                </div>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <div style={(p1ScoreBoard[\"GAME_TOTAL\"] >= p2ScoreBoard[\"GAME_TOTAL\"]) ?\n                                        {\n                                            borderStyle:\"solid\", \n                                            borderColor: \"red\", \n                                            borderRadius:\"5px\", \n                                            borderWidth: \"2pt\",\n                                            backgroundColor: \"rgba(0,0,0,0.75)\", padding: \"10px\", textAlign: \"center\", fontSize: \"x-large\", fontWeight: \"bolder\", height:\"50px\"\n                                        } : {backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"10px\", textAlign: \"center\", fontSize: \"x-large\", fontWeight: \"bolder\", height:\"50px\"}}>\n                                    {\n                                        p1ScoreBoard[\"GAME_TOTAL\"]\n                                    }                                    {\n                                        p1ScoreBoard[\"DISCONNECTED\"] ? <div style={{color: \"red\", fontSize: \"small\", textAlign: \"center\", fontWeight: \"bolder\"}}>DISCONNECTED</div> : \"\"\n                                    }\n                                </div>\n                            </Grid>\n                            <Grid item xs={6}>\n                                \n                                <div style={(p2ScoreBoard[\"GAME_TOTAL\"] >= p1ScoreBoard[\"GAME_TOTAL\"]) ?\n                                    {\n                                        borderStyle:\"solid\", \n                                        borderColor: \"red\", \n                                        borderRadius:\"5px\", \n                                        borderWidth: \"2pt\",\n                                        backgroundColor: \"rgba(0,0,0,0.75)\", padding: \"10px\", textAlign: \"center\", fontSize: \"x-large\", fontWeight: \"bolder\", height:\"50px\"\n                                    } : {backgroundColor: \"rgba(0,0,0,0.5)\", padding: \"10px\", textAlign: \"center\", fontSize: \"x-large\", fontWeight: \"bolder\", height:\"50px\"}}>\n                                    {\n                                        p2ScoreBoard[\"GAME_TOTAL\"]\n                                    }\n                                    {\n                                        p2ScoreBoard[\"DISCONNECTED\"] ? <div style={{color: \"red\", fontSize: \"small\", textAlign: \"center\", fontWeight: \"bolder\"}}>DISCONNECTED</div> : \"\"\n                                    }\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <div style={{\n                                    borderStyle:\"solid\", \n                                    borderColor: \"red\", \n                                    borderRadius:\"5px\", \n                                    borderWidth: \"2px\",\n                                    margin: \"25px\",\n                                    backgroundColor: \"rgba(0,0,0,0.75)\", padding: \"20px\", textAlign: \"center\", fontSize: \"xx-large\", fontWeight: \"bolder\"}}>\n                                    {\n                                        determineWhosWinning() === \"TIE\" ? \"Tie\" : (determineWhosWinning() === \"WINNING\" ? \"You won!\" : \"Opponent won!\")\n                                    }\n                                </div>\n                            </Grid>\n                            <Grid item xs={12}>\n                                <hr></hr>\n                            </Grid>\n                            {/* <Grid item xs={4}>\n                                <Chatbox/>\n                            </Grid> */}\n                            <Grid item xs={12}>\n                                <div style={{margin: \"10px\"}}>\n                                    <Button variant=\"contained\" onClick={handleOnClick}>Find another game</Button>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ConclusionPage;","import React from 'react'\nimport { useState, useEffect } from 'react';\n\nconst TimerAutomatic = (props) => {\n    const initialSeconds = props.seconds;\n    const [seconds, setSeconds ] =  useState(initialSeconds);\n    useEffect(()=>{\n    let myInterval = setInterval(() => {\n            if (seconds > 0) {\n                setSeconds(seconds - 1);\n            }\n        }, 1000)\n        return ()=> {\n            clearInterval(myInterval);\n          };\n    });\n\n    return (\n        <div style={{\n            backgroundImage: \"linear-gradient(to right, rgba(255,215,100,0.2), gold, rgba(255,215,0,0.5), rgba(255,215,0,0))\",\n            display: \"flex\",\n            padding: \"2pt\",\n            paddingLeft: \"5pt\",\n            marginBottom: \"5pt\",\n            color: \"black\"\n        }}>\n            <div>{props.leftText}&nbsp;</div> \n                    <div>\n                { seconds === 0\n                    ? \"\"\n                    : <div style={{fontWeight: \"bolder\"}}> {seconds < 10 ?  `${seconds}` : seconds}</div> \n                }\n                </div>\n            <div>&nbsp;{props.rightText}</div>\n        </div>\n    )\n}\n\nexport default TimerAutomatic;","import React from 'react'\nimport { useSelector } from \"react-redux\"\nimport Timer from './timer';\nimport TimerAutomatic from './timerAutomatic';\nimport EachHint from './eachHint';\n\nfunction HintChoicePage() {\n\n    const hintsPool = useSelector(state => state.hintsPoolReducer);\n    const gamevars = useSelector(state => state.gamevarsReducer)\n\n    return ( \n        <div \n            style={{\n            // position: \"absolute\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundImage: \"linear-gradient(to left top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))\",\n            // zIndex: \"2\",\n            maxWidth: \"1000px\",\n            maxHeight: \"750px\",\n            backdropFilter: \"blur(50px)\"\n            }}\n        >\n            <div style={{margin: \"50px\"}}>\n\n                <Timer rightText=\"seconds remaining...\" seconds={gamevars[\"TIME_FOR_GUESSING\"]} noMargin={true}/>\n                <TimerAutomatic seconds={gamevars[\"TIME_FOR_CHOOSING_HINT\"]} rightText=\"seconds ...\" leftText=\"A random hint will be chosen in\"/>\n                <div style={{\n                        fontSize: \"xx-large\",\n                        fontWeight: \"bolder\",\n                        color: \"white\"\n                        }}>\n                            CHOOSE A HINT\n                    </div>\n                <div style={{color: \"white\"}}>The Guesser just asked for a hint. Choose one for them.</div><br/>\n\n                <div style={{display:\"flex\"}}>\n                    {   (hintsPool !== null && hintsPool.length !== 0) ?\n                        hintsPool.map(\n                            eachHint => (\n                                eachHint[\"hint_type\"] !== \"image\" ?\n                                <EachHint\n                                    allowClick={true}\n                                    hintInfo={eachHint}\n                                    key={eachHint[\"id\"]}\n                                /> : \"\"\n                            )\n                        ) : \"\"\n                    }\n                </div>\n                <div style={{display:\"flex\"}}>\n                    {\n                        (hintsPool !== null && hintsPool.length !== 0) ?\n                        hintsPool.map(\n                            eachHint => (\n                                eachHint[\"hint_type\"] === \"image\" ?\n                                <EachHint\n                                    allowClick={true}\n                                    hintInfo={eachHint}\n                                    key={eachHint[\"id\"]}\n                                /> : \"\"\n                            )\n                        ) : \"\"\n                    }\n                </div>\n            </div>\n        </div>\n        );\n}\n \nexport default HintChoicePage;","import React from 'react';\nimport Timer from './timer';\nimport HourglassFullIcon from '@mui/icons-material/HourglassFull';\nimport { LinearProgress, Button } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nfunction GameWelcomeScreen(props) {\n\n    return (\n        <div style={{\n            // position: \"absolute\",\n            // zIndex: \"2\",\n            // width: \"100%\",\n            // height: \"100%\",\n            // backgroundImage: \"linear-gradient(to left top, rgba(0,0,0,0.5), rgba(0,0,0,0.5))\",\n            maxWidth: \"1000px\",\n            maxHeight: \"750px\",\n            backdropFilter: \"blur(50px)\"\n        }}>\n            <div style={{margin:\"50px\"}}>\n                <div style={{color: \"white\", display: \"block\", width: \"100%\", height: \"100%\"}}><br/><br/>\n                    <div style={{display: \"flex\", paddingTop: \"25px\"}}>\n                        <div style={{fontWeight: \"bolder\", fontSize: \"xxx-large\"}}>H A N G M _ N</div>\n                        <div style={{fontWeight: \"lighter\", fontSize: \"xxx-large\"}}>ONLINE</div>\n                    </div>\n                    <div>An online, modern adaptation of the classic Hangman game.</div><br/>\n                    <hr/>\n                    <div>\n                        <br/>\n                        <Button variant=\"contained\" onClick={()=>props.onClickFunc()}>PLAY NOW</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default GameWelcomeScreen;","import { useState } from \"react\";\nimport WordEntryScreen from \"./wordEntryScreen\";\nimport GuesserWaitScreen from \"./guesserWaitScreen\";\nimport ConnectionErrorScreen from \"./connectionErrorScreen\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ScoreBoardScreen from \"./scoreBoardScreen\";\nimport GameGrid from \"./gameGrid\";\nimport GameWaitScreen from \"./gameWaitScreen\";\nimport ConclusionPage from \"./conclusionPage\";\nimport HintChoicePage from \"./hintChoicePage\";\nimport GameWelcomeScreen from \"./gameWelcomeScreen\";\nimport {\n  sendMessage\n} from \"../actions\"\n\nfunction Game() {\n\n  const dispatch = useDispatch();\n  const [isReady, setIsReady] = useState(false);\n  const gameState = useSelector(state => state.gameStateReducer)\n  const myPlayerId = useSelector(state => state.myPlayerIdReducer)[\"id\"]\n  const ex = useSelector(state => state.exReducer)[\"id\"]\n  const roundState = useSelector(state => state.roundStateReducer)\n  const disconnected = useSelector(state => state.disconnectedReducer)\n  const hintRequested = useSelector(state => state.hintRequestedReducer)\n  const gamevars = useSelector(state => state.gamevarsReducer)\n  const authInfo = useSelector(state => state.auth);\n  const user = authInfo[\"user\"]\n\n  const handleChooseStage = () => {\n    if (myPlayerId === ex) {\n      return <WordEntryScreen/>;\n    } else {\n      return <GuesserWaitScreen/>;\n    }\n  }\n\n  const handlePlayerReady = () => {\n    setIsReady(true);\n    const msg = {\n      \"msg_type\": \"join\",\n      \"is_guest\": user === null ? true : false,\n      \"player_id\": user !== null ? user[\"id\"] : 0,      // 0 is guest.\n      \"player_name\": user !== null ? user[\"first_name\"] : null,\n      \"game_id\": \"__ANY__\",\n      \"access_token\": authInfo[\"access\"]\n  }\n  dispatch(sendMessage(msg));\n  }\n\n  const choosePage = () => {\n    if (disconnected) return <ConnectionErrorScreen/>;\n    if (gameState === gamevars[\"GAME_STATE_FINISHED\"]) return <ConclusionPage/>;\n    if (!isReady) return <GameWelcomeScreen onClickFunc={handlePlayerReady}/>;\n    if (!disconnected && gameState === gamevars[\"GAME_STATE_WAITING\"]) return <GameWaitScreen/>;\n    if (roundState === gamevars[\"ROUND_STATE_RECESS\"]) return <ScoreBoardScreen/>;\n    if (roundState === gamevars[\"ROUND_STATE_CHOOSING_WORD\"]) return handleChooseStage();\n    if (ex === myPlayerId && hintRequested) return <HintChoicePage/>;\n    if (gameState === gamevars[\"ROUND_STATE_GUESSING_WORD\"]) return <div style={{padding: \"50px\"}}><GameGrid/></div>;\n  }\n\n  return (\n    <div style={{display: \"flex\", height: \"750px\"}}>\n      <div style={{\n        backgroundImage: \"linear-gradient(to right, rgb(80,20,90), rgb(80,0,200))\",\n        width: \"100%\",\n        maxWidth: \"1000px\",\n        height: \"750px\",\n        }}>\n          \n        {choosePage()}\n\n      </div>\n\n      {/* overlay */}\n      {/* {(ex === myPlayerId && hintRequested) ? <HintChoicePage/> : \"\"}\n      {(!disconnected && gameState === gamevars[\"GAME_STATE_WAITING\"]) ? <GameWaitScreen/> : \"\"}\n      {(gameState === gamevars[\"GAME_STATE_FINISHED\"]) ? <ConclusionPage/> : \"\"}\n      {!isReady ?<GameWelcomeScreen onClickFunc={handlePlayerReady}/> : \"\"}\n      {disconnected ? <ConnectionErrorScreen/> : \"\"} */}\n\n    </div>\n  );\n}\n\nexport default Game;\n","import { useState, useEffect } from 'react';\nimport React from 'react';\nimport Game from '../components/game';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport InfoRounded from '@mui/icons-material/Info';\nimport People from '@mui/icons-material/People';\nimport { Card } from '@mui/material';\n\n\nconst getServerResponse = (url, pid, setFunc) => {\n    if (pid !== null) {\n        url = url + pid.toString() + \"/\"\n    }\n    fetch(url)\n    .then(response => response.json())\n    .then(jsonObject => setFunc(jsonObject))\n    .catch(error => console.error(error));\n\n}\n\nfunction Home() {\n\n\n    const data = useSelector(state => state.auth, shallowEqual);\n    const playerCount = useSelector(state => state.playerCountReducer);\n    const userId = data[\"user\"] !== null ? data[\"user\"][\"id\"] : null\n    const username = data[\"user\"] !== null ? data[\"user\"][\"first_name\"] : \"Guest\";\n    const signed_in = data[\"user\"] !== null ? true : false;\n    const activated = data.activationSuccess;\n\n    const top_players_api_url = \"https://hangman.rogerli.net/gamedata/get_top_players/\";\n    const top_words_api_url = \"https://hangman.rogerli.net/gamedata/get_top_words/\";\n    const my_stats_url = \"https://hangman.rogerli.net/gamedata/get_my_game_stats/\";\n\n    const [top_players_rows, setTopPlayerRows] = useState([]);\n    const [top_words_rows, setTopWordRows] = useState([]);\n    const [my_stat_row, setMyStatsRow] = useState([]);\n\n    useEffect(() => {\n        getServerResponse(top_players_api_url, null, setTopPlayerRows);\n        getServerResponse(top_words_api_url, null, setTopWordRows);\n        getServerResponse(my_stats_url, userId, setMyStatsRow);\n    }, [userId])\n\n    return (\n    <div style={{backgroundImage: \"linear-gradient(to top, rgb(244,244,244), rgb(53,58,63))\", minHeight: \"100vh\"}}>\n    <div style={{display: \"flex\", justifyContent:\"center\", paddingTop:\"50px\"}}>\n        <Card sx={{ p: 5, mt: 1 }} style={{backgroundColor: \"rgba(230, 230, 230, 0.8)\", width: \"60%\"}}>\n            <br/>\n                {\n                    activated === true ?\n                    <div class=\"alert alert-success\" role=\"alert\">\n                        Account activated. Please login to use your account to continue.\n                    </div>\n                    :\n                    \"\"\n                }\n            <h1 class='display-4' style={{fontWeight: 750}}>Hello, {username}!</h1>        <hr/>\n\n            <p class='lead'>\n                {\n                    !signed_in ? \n                    \"You're not signed in. Your game data will not be saved unless you sign in.\" :\n                    \"You're signed in. Your game data will be saved.\"\n                }\n                <br/>To test the game application, open the same website in another browser tab.\n            </p>\n\n                {/* <Card style={{backgroundImage: \"linear-gradient(to right, rgba(233,233,233, 1), rgba(122,122,122, 0))\", borderRadius:\"5px\", padding:\"5px\", marginBottom:\"2px\"}}> */}\n                <Card style={{padding:\"5px\", marginBottom:\"5px\", backgroundColor: \"rgba(52,73,94, 0.2)\"}}>\n                    <People/>There are currently <b>{playerCount[0]}</b> players connected.\n                    <b> {playerCount[1]} </b> of them are in a game.\n                    {/* <b> {playerCount[2]}  game(s)</b> are currently being hosted. */}\n                </Card>\n\n            <Game/>\n        </Card>\n\n\n        <Card sx={{ p: 5, mt: 1 }} style={{backgroundColor: \"rgba(230, 230, 230, 1)\", width:\"25%\"}}>\n\n            <Card sx={{ p: 1.5 }} style={{backgroundColor: \"LemonChiffon\"}}>\n                <GitHubIcon/>    Visit the GitHub page <a href=\"https://github.com/rogerli2020/Hangman-Online\">here</a>.\n            </Card>\n\n            <hr/>\n            {/* <h3>Credits</h3> */}\n            <Card sx={{ p: 1.5}}>\n                                                 <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"55\" height=\"55\" viewBox=\"0 0 514.168 155.721\">\n                    <path d=\"M20.591 73.837H0V48.486h21.173V42.05C21.173 10.866 35.353 0 63.324 0c7.577 0 13.404 1.207 17.871 2.013L79.06 26.96c-2.912-1.007-5.827-1.61-11.07-1.61-8.935 0-12.432 6.438-12.432 16.7v6.437h24.862v25.351H55.557v79.467H20.59V73.837zM98.676 2.415h34.964v150.888H98.676zM163.553 4.83h34.964v26.556h-34.964zM163.553 48.486h34.964v104.817h-34.964zM303.604 78.462c-6.41-4.022-12.82-5.833-21.173-5.833-15.152 0-26.808 10.864-26.808 28.971 0 16.7 13.6 27.562 28.749 27.562 7.965 0 15.93-1.81 21.756-5.03l.777 26.96c-8.742 3.02-19.23 4.628-28.554 4.628-33.412 0-58.857-20.118-58.857-54.723 0-34.806 25.445-54.924 58.857-54.924 10.49 0 19.811 1.81 27.777 5.834l-2.524 26.555zM321.477 2.415h34.963v90.132h.388l29.137-44.061h38.266L389.073 96.57l38.073 56.734h-42.347l-27.97-51.905h-.389v51.905h-34.963z\" fill=\"#0063db\"/>\n                    <path d=\"M512.418 77.456c-3.886-1.205-7.772-1.205-11.85-1.205-16.314 0-25.445 12.272-25.445 32.793v44.26h-34.964V48.485h31.856V67.8h.389c6.02-13.278 14.762-21.727 29.914-21.727 4.076 0 8.35.602 11.85 1.205l-1.75 30.178z\" fill=\"#ff0084\"/>\n                </svg><br/>\n                <InfoRounded fontSize=\"medium\"/> Image search API powered by  <a href=\"https://www.flickr.com/services/feeds/docs/photos_public/\">Flickr</a>.\n            </Card>\n\n            <Card sx={{ p: 1.5, mt: 1}}>\n                <InfoRounded fontSize=\"medium\"/> SQLite Dictionary developed by <a href=\"https://github.com/AyeshJayasekara/English-Dictionary-SQLite\">Ayesh Jayasekara</a>.\n            </Card>\n\n            <hr class='my-4' />\n\n                <div style={{marginBottom: \"10px\"}}>\n                    <h2>Game Statistics</h2>\n                    <p>Your game data will be recorded if you're signed in.</p>\n                </div>\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell><strong>Your Statistics</strong></TableCell>\n                            <TableCell align=\"right\"><strong>Win Ratio</strong></TableCell>\n                            <TableCell align=\"right\"><strong>Games Played</strong></TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {\n                            my_stat_row.length === 0 ? <TableRow><TableCell>No data available.</TableCell></TableRow> : \"\"\n                        }\n                        {my_stat_row.map((row) => (\n                            <TableRow\n                            key={row.pid}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.win_ratio.toFixed(2)}</TableCell>\n                            <TableCell align=\"right\">{row.games_played}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer><br/>\n\n\n                <TableContainer component={Paper}>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell><strong>Top Players</strong></TableCell>\n                            <TableCell align=\"right\"><strong>Win Ratio</strong></TableCell>\n                            <TableCell align=\"right\"><strong>Games Played</strong></TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {\n                                top_players_rows.length === 0 ? <TableRow><TableCell>No data available.</TableCell></TableRow> : \"\"\n                            }\n                        {top_players_rows.map((row) => (\n                            <TableRow\n                            key={row.pid}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.name}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.win_ratio.toFixed(2)}</TableCell>\n                            <TableCell align=\"right\">{row.games_played}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer><br/>\n\n                <TableContainer component={Paper}>\n                    {/* <Table sx={{ minWidth: 650 }} aria-label=\"simple table\"> */}\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell><strong>Top Words</strong></TableCell>\n                            <TableCell align=\"right\"><strong>Frequency</strong></TableCell>\n                            <TableCell align=\"right\"><strong>Avg. Score</strong></TableCell>\n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {\n                        top_words_rows.length === 0 ? <TableRow><TableCell>No data available.</TableCell></TableRow> : \"\"\n                        }\n                        {\n                        top_words_rows.map((row) => (\n                            <TableRow\n                            key={row.name}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                            <TableCell component=\"th\" scope=\"row\">\n                                {row.word}\n                            </TableCell>\n                            <TableCell align=\"right\">{row.frequency}</TableCell>\n                            <TableCell align=\"right\">{row.avg_score}</TableCell>\n                            </TableRow>\n                        ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer><br/>\n\n            <hr/>\n            <h2>Visitor Statistics</h2>\n            {/* <iframe \n                className=\"adc\" \n                scrolling=\"no\" \n                frameBorder=\"0\" \n                allowtransparency=\"true\" \n                src=\"//rf.revolvermaps.com/w/6/a/a2.php?i=58syu0oioz7&amp;m=7&amp;c=e63100&amp;cr1=ffffff&amp;f=arial&amp;l=0&amp;bv=90&amp;lx=-400&amp;ly=400&amp;hi=20&amp;he=7&amp;hc=a8ddff&amp;rs=80\"\n            ></iframe> */}\n            <a href=\"https://www.revolvermaps.com/livestats/57axayg53wl/\"><img src=\"//rf.revolvermaps.com/h/m/a/0/ff0000/128/0/57axayg53wl.png\"/></a>\n\n        </Card>\n    </div>\n\n    <div style={{display: \"flex\", justifyContent:\"center\", paddingTop: \"50px\", paddingBottom: \"50px\"}}>\n        <div sx={{ p: 5, mt: 1 }} style={{width: \"60%\"}}>\n\n        <div style={{justifyContent:\"center\"}}>\n                <div style={{display: \"flex\"}}>\n                            <div style={{fontWeight: \"bolder\", fontSize: \"xxx-large\"}}>H A N G M _ N</div>\n                            <div style={{fontWeight: \"lighter\", fontSize: \"xxx-large\"}}>ONLINE</div>\n                </div>\n                <p class='lead'>An online, modern adaptation of the classic Hangman game.</p>\n                \n                <br/>\n                By <a href=\"https://github.com/rogerli2020\">Roger Li</a><br></br>\n                Last Updated: June 2023\n\n            </div>\n        </div>\n\n        <div sx={{ p: 5, mt: 1 }} style={{width:\"25%\", textAlign:\"right\"}}>\n        </div>\n\n    </div>\n\n    </div>\n\n    \n    )\n};\n\nexport default Home;\n","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\nexport const LOGOUT = 'LOGOUT';\n","import axios from 'axios';\nimport {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    FACEBOOK_AUTH_SUCCESS,\n    FACEBOOK_AUTH_FAIL,\n    LOGOUT\n} from './types';\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        }; \n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n            dispatch({\n                type: USER_LOADED_SUCCESS,\n                payload: res.data\n            });\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\nexport const googleAuthenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\n            dispatch({\n                type: GOOGLE_AUTH_SUCCESS,\n                payload: res.data,\n                googleAuthSuccessful: true,\n            });\n\n            dispatch(load_user());\n        } catch (err) {\n            dispatch({\n                type: GOOGLE_AUTH_FAIL,\n                googleAuthSuccessful: false,\n            });\n        }\n    }\n};\n\nexport const checkAuthenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        }; \n\n        const body = JSON.stringify({ token: localStorage.getItem('access') });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\n\n            if (res.data.code !== 'token_not_valid') {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n\n        dispatch(load_user());\n        return true;\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        })\n        return false;\n    }\n};\n\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ first_name, last_name, email, password, re_password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n        dispatch({\n            type: SIGNUP_SUCCESS,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL,\n            payload: err.response.data\n        })\n    }\n};\n\nexport const verify = (uid, token) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        dispatch({\n            type: ACTIVATION_SUCCESS,\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        })\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_FAIL\n        });\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\n\n    try {\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\n        });\n    } catch (err) {\n        dispatch({\n            type: PASSWORD_RESET_CONFIRM_FAIL\n        });\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n};\n\n\n\n\nexport const facebookAuthenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?${formBody}`, config);\n\n            dispatch({\n                type: FACEBOOK_AUTH_SUCCESS,\n                payload: res.data\n            });\n\n            dispatch(load_user());\n        } catch (err) {\n            dispatch({\n                type: FACEBOOK_AUTH_FAIL\n            });\n        }\n    }\n};","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '' \n    });\n\n    const { email, password } = formData;\n\n    const googleSucc = useSelector(state => state.auth).googleAuthSuccessful\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n    const [correctComb, setCorrectComb] = useState(0);\n\n    const onSubmit = e => {\n        e.preventDefault();\n        const res = login(email, password);\n        if (res === true) {\n            setCorrectComb(1);\n        } else {\n            setCorrectComb(2);\n        }\n    };\n\n    const continueWithGoogle = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    } \n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign into your Account</p>\n            {\n                correctComb === 2 ?\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                        Invalid username or password.\n                    </div>\n                    :\n                    \"\"\n            }\n            {\n                googleSucc === false ?\n                <div class=\"alert alert-danger\" role=\"alert\">\n                    Login through Google failed. Please make sure you're signed up before logging in.\n                </div>\n                :\n                \"\"\n            }\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Login</button>\n            </form>\n            {/* <button className='btn btn-danger mt-3' onClick={continueWithGoogle}>\n                Continue With Google\n            </button> */}\n            {/* <br />\n            <button className='btn btn-primary mt-3' onClick={continueWithFacebook}>\n                Continue With Facebook\n            </button> */}\n            <p className='mt-3'>\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\n            </p>\n            <p className='mt-3'>\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signup } from '../actions/auth';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\n\nconst Signup = ({ signup, isAuthenticated }) => {\n\n    const authInfo = useSelector(state => state.auth)\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: 'DOE',\n        email: '',\n        password: '',\n        re_password: ''\n    });\n\n    const { first_name, last_name, email, password, re_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            signup(first_name, last_name, email, password, re_password);\n            // setAccountCreated(true);\n        }\n    };\n\n    const getSignUpMessage = () => {\n        if (authInfo === null) return;\n        if (authInfo.signUpSuccess === null) return;\n        if (authInfo.signUpSuccess === true) {\n            return <div class=\"alert alert-success\" role=\"alert\">\n                Success! To continue, please click on the activation link we sent to your email.\n            </div>\n        } else {\n            if (authInfo.hasOwnProperty('email') && authInfo.hasOwnProperty('first_name')) {\n                return <div class=\"alert alert-danger\">Email and username are already in use.</div>\n            } else if (authInfo.hasOwnProperty('email')) {\n                return <div class=\"alert alert-danger\">Email is already in use.</div>\n            } else {\n                return (\n                    <div class=\"alert alert-danger\">\n                        Username is already in use.\n                        Note: if you encountered this error while signing up with Google, your Google account is not eligible.\n                    </div>\n                )\n            }\n        }\n    }\n\n    const continueWithGoogle = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`)\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n\n        }\n    };\n\n    if (isAuthenticated) {\n        return <Redirect to='/' />\n    }\n    if (accountCreated) {\n        return <Redirect to='/login' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign Up</h1>\n            <p>Create your Account<br/>\n            For your safety, use a password that you do not use for other sites.</p>\n            {\n                getSignUpMessage()\n            }\n            {\n                password !== re_password ?\n                <div class=\"alert alert-danger\">Passwords do not match.</div> : \"\"\n            }\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Username*'\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n            <div style={{display:\"inline\"}}>\n                <button className='btn btn-primary' type='submit'>Register</button>\n            </div>\n            </form>\n            \n            {/* <button className='btn btn-primary mt-3' onClick={continueWithFacebook}>\n                Continue With Facebook\n            </button> */}\n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","import React from 'react';\nimport { Card } from '@mui/material';\n\n\nconst getServerResponse = (url, pid, setFunc) => {\n    if (pid !== null) {\n        url = url + pid.toString() + \"/\"\n    }\n    fetch(url)\n    .then(response => response.json())\n    .then(jsonObject => setFunc(jsonObject))\n    .catch(error => console.error(error));\n\n}\n\nfunction HowToPlay() {\n\n    return (\n    <div style={{backgroundImage: \"linear-gradient(to top, rgb(244,244,244), rgb(53,58,63))\", minHeight: \"100vh\"}}>\n    <div style={{display: \"flex\", justifyContent:\"center\", paddingTop:\"50px\"}}>\n        <Card sx={{ p: 5, mt: 1 }} style={{backgroundColor: \"rgba(230, 230, 230, 0.8)\", width: \"85%\"}}>\n            <br/>\n            <h1 class='display-4' style={{fontWeight: 750}}>How To Play</h1> \n            <p class='lead'>\n                A guide to mastering this game.\n            </p>\n\n            <hr/>\n\n            <p>poop</p>\n        </Card>\n\n\n\n    </div>\n\n    <div style={{display: \"flex\", justifyContent:\"center\", paddingTop: \"50px\", paddingBottom: \"50px\"}}>\n        <div sx={{ p: 5, mt: 1 }} style={{width: \"60%\"}}>\n\n        <div style={{justifyContent:\"center\"}}>\n                <div style={{display: \"flex\"}}>\n                            <div style={{fontWeight: \"bolder\", fontSize: \"xxx-large\"}}>H A N G M _ N</div>\n                            <div style={{fontWeight: \"lighter\", fontSize: \"xxx-large\"}}>ONLINE</div>\n                </div>\n                <p class='lead'>An online, modern adaptation of the classic Hangman game.</p>\n                \n                <br/>\n                By <a href=\"https://github.com/rogerli2020\">Roger Li</a><br></br>\n                Last Updated: June 2023\n\n            </div>\n        </div>\n\n        <div sx={{ p: 5, mt: 1 }} style={{width:\"25%\", textAlign:\"right\"}}>\n        </div>\n\n    </div>\n\n    </div>\n\n    \n    )\n};\n\nexport default HowToPlay;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { verify } from '../actions/auth';\n\nconst Activate = ({ verify, match }) => {\n    const [verified, setVerified] = useState(false);\n\n    const verify_account = e => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        verify(uid, token);\n        setVerified(true);\n    };\n\n    if (verified) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex flex-column justify-content-center align-items-center'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Verify your Account:</h1>\n                <button\n                    onClick={verify_account}\n                    style={{ marginTop: '50px' }}\n                    type='button'\n                    className='btn btn-primary'\n                >\n                    Verify\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { verify })(Activate);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\n\nconst ResetPassword = ({ reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <h1>Password Reset</h1>\n            <div>Please enter your email below. You will receive an email that contains directions to reset your password.</div>\n            <br/>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Confirm</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password })(ResetPassword);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\n\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        setRequestSent(true);\n    };\n\n    if (requestSent) {\n        return <Redirect to='/' />\n    }\n\n    return (\n        <div className='container mt-5'>\n            <form onSubmit={e => onSubmit(e)}>\n            <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\n            </form>\n        </div>\n    );\n};\n\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);\n","import React, { useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { facebookAuthenticate } from '../actions/auth';\nimport queryString from 'query-string';\n\nconst Facebook = ({ facebookAuthenticate }) => {\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        // console.log('State: ' + state);\n        // console.log('Code: ' + code);\n\n        if (state && code) {\n            facebookAuthenticate(state, code);\n        }\n    }, [location]);\n\n    return (\n        <div className='container'>\n            <div class='jumbotron mt-5'>\n                <h1 class='display-4'>Welcome to Auth System!</h1>\n                <p class='lead'>This is an incredible authentication system with production level features!</p>\n                <hr class='my-4' />\n                <p>Click the Log In button</p>\n                <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { facebookAuthenticate })(Facebook);\n","import React, { useEffect } from 'react';\nimport { Link, useLocation, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { googleAuthenticate } from '../actions/auth';\nimport queryString from 'query-string';\nimport { useSelector } from 'react-redux';\n\nconst Google = ({ googleAuthenticate }) => {\n    let location = useLocation();\n\n    const authInfo = useSelector(state => state.auth)\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        console.log('State: ' + state);\n        console.log('Code: ' + code);\n\n        if (state && code) {\n            googleAuthenticate(state, code);\n        }\n    }, [location]);\n\n    const getMessage = () => {\n        if (authInfo.isAuthenticated === true) {\n            return (\n                <div>\n                <h1 class='display-4'>Welcome to Hangman Online!</h1>\n                <p class='lead'>You're now signed in.</p>\n                <hr class='my-4' />\n                <Link class='btn btn-primary btn-lg' to='/' role='button'>Start Playing</Link>\n                </div>\n            )\n        } else {\n            if (authInfo.googleAuthSuccessful === false) {\n                return (\n                    <Redirect to='/login' />\n                )\n            } else if (authInfo.googleAuthSuccessful === true) {\n                return (\n                    <div>\n                    <h2>Success!</h2>\n                    <p class='lead'>You're now signed up through Google! Click on the Login button to Log in.</p>\n                    {/* <hr class='my-4' /> */}\n                    <br/>\n                    <Link class='btn btn-primary btn-lg' to='/login' role='button'>Login</Link>\n                    </div>\n                )\n            } else {\n                return (\n                    <div>\n                    <p class='lead'>Processing...</p>\n                    </div>\n                )\n            }\n        }\n    }\n\n    return (\n        <div className='container'>\n            <div class='jumbotron mt-5'>\n                {\n                    getMessage()\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default connect(null, { googleAuthenticate })(Google);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n\n// mainMsg: the main message to display.\n// variant: success/error/warning.\n// linkName: name of new link to jump to.\n// link: actual link to the redirected page.\n\nconst RedirectPage = (props) => (\n    <div className='container'>\n        <div class='jumbotron mt-5'>\n            <h2>{props.mainMsg}</h2>\n            <h2>Account created successfully!</h2>\n            <hr class='my-4' />\n            <p>You will be redirected to your {props.linkName} or you can&nbsp;\n            <Link to={props.linkName}>click here directly</Link>\n            .</p>\n        </div>\n    </div>\n);\n\nexport default RedirectPage;\n","const allMessagesReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"ADD_NEW_MESSAGE\":\n            return [...state, action.data]\n        default:\n            return state\n    }\n}\n\nexport default allMessagesReducer;","const serverSocketReducer = (state=null, action) => {\n    switch(action.type) {\n        case \"SET_SERVER_SOCKET\":\n            if (state == null) {\n                state = action.data;\n            }\n            return action.data;\n        case \"SEND_MESSAGE\":\n            state.send(JSON.stringify(action.data));\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default serverSocketReducer;","const defaultConfig = {\n    \"MAX_ROUNDS\" : 3,\n    \"GAME_STATE_WAITING\" : 0,\n    \"GAME_STATE_READY\" : 1,\n    \"GAME_STATE_IN_PROGRESS\": 2,\n    \"GAME_STATE_FINISHED\" : 3,\n    \"ROUND_STATE_READY\" : 0,\n    \"ROUND_STATE_CHOOSING_WORD\" : 1,\n    \"ROUND_STATE_GUESSING_WORD\" : 2,\n    \"ROUND_STATE_RECESS\" : 3,\n    \"TIME_FOR_READY\" : 1,\n    \"TIME_FOR_CHOOSING\" : 10,\n    \"TIME_FOR_GUESSING\" : 500,\n    \"TIME_FOR_RECESS\" : 10,\n    \"TIME_FOR_CHOOSING_HINT\" : 10,\n    \"OVERTIME_FOR_CHANGE\" : 20,\n    \"MAX_BASE_POINTS\": 1000,\n    \"MAX_BONUS_POINTS\": 500,\n    \"MAX_PROGRESSION_POINTS\": 500,\n    \"COMPENSATION_FOR_RANDOM\": 100,\n    \"PENALTY_FOR_HINT\": -25,\n    \"PENALTY_FOR_FALSE_GUESS\": -200\n}\n\nconst gamevarsReducer = (state=defaultConfig, action) => {\n    switch(action.type) {\n        case \"SET_GAMEVARS\":\n            state = action.data;\n            return action.data;\n        default:\n            return state;\n    }\n}\n\nexport default gamevarsReducer;","const gameStateReducer = (state=0, action) => {\n    switch(action.type) {\n        case \"SET_GAME_STATE\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default gameStateReducer;","const currentRoundCountReducer = (state=0, action) => {\n    switch(action.type) {\n        case \"SET_CURRENT_ROUND_COUNT\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default currentRoundCountReducer;","const hintsPoolReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_HINTS_POOL\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default hintsPoolReducer;","const exReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_EX\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default exReducer;","const gsrReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_GSR\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default gsrReducer;","const boardReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_BOARD\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default boardReducer;","const chosenWordReducer = (state=null, action) => {\n    switch(action.type) {\n        case \"SET_CHOSEN_WORD\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default chosenWordReducer;","const cguessesReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_CGUESSES\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default cguessesReducer;","const fguessesReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_FGUESSES\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default fguessesReducer;","const hintsReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_HINTS\":\n            state = action.data;\n            state.reverse();\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default hintsReducer;","const hintRequestedReducer = (state=false, action) => {\n    switch(action.type) {\n        case \"SET_HINT_REQUESTED\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default hintRequestedReducer;","const p1ScoreBoardReducer = (state={\"FINISHED_GUESSING\": false, \"GAME_TOTAL\" : 0, \"DISCONNECTED\" : false}, action) => {\n    switch(action.type) {\n        case \"SET_P1_SCORE_BOARD\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default p1ScoreBoardReducer;","const p2ScoreBoardReducer = (state={\"FINISHED_GUESSING\": false, \"GAME_TOTAL\" : 0, \"DISCONNECTED\" : false}, action) => {\n    switch(action.type) {\n        case \"SET_P2_SCORE_BOARD\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default p2ScoreBoardReducer;","const rotatedReducer = (state=false, action) => {\n    switch(action.type) {\n        case \"SET_ROTATED\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default rotatedReducer;","const roundStateReducer = (state=0, action) => {\n    switch(action.type) {\n        case \"SET_ROUND_STATE\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default roundStateReducer;","const wordWasRandomReducer = (state=false, action) => {\n    switch(action.type) {\n        case \"SET_WORD_WAS_RANDOM\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default wordWasRandomReducer;","const guessedCorrectlyReducer = (state=false, action) => {\n    switch(action.type) {\n        case \"SET_GUESSED_CORRECTLY\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default guessedCorrectlyReducer;","const wrongGuessesReducer = (state=[], action) => {\n    switch(action.type) {\n        case \"SET_WRONG_GUESSES\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default wrongGuessesReducer;","const defaultVals = {\n    \"id\": 0,\n    \"name\": \"PLACEHOLDER\"\n}\n\nconst myPlayerIdReducer = (state=defaultVals, action) => {\n    switch(action.type) {\n        case \"SET_MY_PLAYER_ID\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default myPlayerIdReducer;","const disconnectedReducer = (state=false, action) => {\n    switch(action.type) {\n        case \"SET_DISCONNECTED\":\n            state = action.data;\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default disconnectedReducer;","const timerReducer = (state=0, action) => {\n    switch(action.type) {\n        case \"SET_TIMER\":\n            state = action.data;\n            return action.data;\n        default:\n            return state;\n    }\n}\n\nexport default timerReducer;","const playerCountReducer = (state=[0,0,0], action) => {\n    switch(action.type) {\n        case \"SET_PLAYER_COUNT\":\n            state = action.data;\n            return action.data;\n        default:\n            return state;\n    }\n}\n\nexport default playerCountReducer;","import {\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    PASSWORD_RESET_SUCCESS,\n    PASSWORD_RESET_FAIL,\n    PASSWORD_RESET_CONFIRM_SUCCESS,\n    PASSWORD_RESET_CONFIRM_FAIL,\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    FACEBOOK_AUTH_SUCCESS,\n    FACEBOOK_AUTH_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    signUpSuccess: null,\n    user: null,\n    googleAuthSuccessful: null,\n    activationSuccess: null,\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true,\n                activationSuccess: null,\n            }\n        case LOGIN_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh,\n                activationSuccess: null,\n            }\n        case GOOGLE_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh,\n                googleAuthSuccessful: true,\n            }\n        case FACEBOOK_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: payload.access,\n                refresh: payload.refresh,\n            }\n        case SIGNUP_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false,\n                signUpSuccess: true,\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload,\n            }\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case GOOGLE_AUTH_FAIL:\n            return {\n                ...state,\n                googleAuthSuccessful: false,\n                isAuthenticated: false,\n                signUpSuccess: false,\n            }\n        case FACEBOOK_AUTH_FAIL:\n        case LOGIN_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false,\n                signUpSuccess: false,\n            }\n        case SIGNUP_FAIL:\n            return {\n                ...state,\n                isAuthenticated: false,\n                signUpSuccess: false,\n                signUpFailMessage: payload,\n            }\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        case PASSWORD_RESET_SUCCESS:\n        case PASSWORD_RESET_FAIL:\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\n        case PASSWORD_RESET_CONFIRM_FAIL:\n        case ACTIVATION_SUCCESS:\n            return {\n                ...state,\n                activationSuccess: true,\n            }\n        case ACTIVATION_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    }\n};\n","import { combineReducers } from \"redux\";\n\nimport allMessagesReducer from \"./allMessages\";\nimport serverSocketReducer from \"./serverSocket\";\nimport gamevarsReducer from \"./gamevars\";\nimport gameStateReducer from \"./gameState\";\nimport currentRoundCountReducer from \"./currentRoundCount\";\nimport hintsPoolReducer from \"./hintsPool\";\nimport exReducer from \"./ex\";\nimport gsrReducer from \"./gsr\";\nimport boardReducer from \"./board\";\nimport chosenWordReducer from \"./chosenWord\";\nimport cguessesReducer from \"./cguesses\";\nimport fguessesReducer from \"./fguesses\";\nimport hintsReducer from \"./hints\";\nimport hintRequestedReducer from \"./hintRequested\";\nimport p1ScoreBoardReducer from \"./p1ScoreBoard\";\nimport p2ScoreBoardReducer from \"./p2ScoreBoard\";\nimport rotatedReducer from \"./rotated\";\nimport roundStateReducer from \"./roundState\";\nimport wordWasRandomReducer from \"./wordWasRandom\";\nimport guessedCorrectlyReducer from \"./guessedCorrectly\";\nimport wrongGuessesReducer from \"./wrongGuesses\";\nimport myPlayerIdReducer from \"./myPlayerId\";\nimport disconnectedReducer from \"./disconnected\";\nimport timerReducer from \"./timer\";\nimport playerCountReducer from \"./playerCount\";\nimport auth from './auth';\n\nconst allReducers = combineReducers(\n    {\n        auth,\n        allMessagesReducer,\n        serverSocketReducer,\n        gamevarsReducer,\n        gameStateReducer,\n        currentRoundCountReducer,\n        hintsPoolReducer,\n        exReducer,\n        gsrReducer,\n        boardReducer,\n        cguessesReducer,\n        fguessesReducer,\n        hintsReducer,\n        hintRequestedReducer,\n        p1ScoreBoardReducer,\n        p2ScoreBoardReducer,\n        rotatedReducer,\n        roundStateReducer,\n        wordWasRandomReducer,\n        guessedCorrectlyReducer,\n        wrongGuessesReducer,\n        myPlayerIdReducer,\n        chosenWordReducer,\n        disconnectedReducer,\n        timerReducer,\n        playerCountReducer,\n    }\n)\n\nexport default allReducers;","import { createStore, applyMiddleware, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\n\nconst Navbar = ({ logout, isAuthenticated }) => {\n    const [redirect, setRedirect] = useState(false);\n\n    const logout_user = () => {\n        logout();\n        setRedirect(true);\n    };\n\n    const guestLinks = () => (\n        <Fragment>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/login'>Login</Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/signup'>Sign Up</Link>\n            </li>\n            <li className='nav-item'>\n                <Link className='nav-link' to='/howtoplay'>How To Play</Link>\n            </li>\n        </Fragment>\n    );\n\n    const authLinks = () => (\n        <li className='nav-item'>\n            <a className='nav-link' href='#!' onClick={logout_user}>Logout</a>\n        </li>\n    );\n\n    return (\n        <Fragment>\n            <div className='navbar navbar-fixed-top navbar-expand-lg navbar-dark bg-dark' role=\"navigation\">\n                <Link className='navbar-brand' to='/'><b style={{fontSize:\"large\"}}>HANGMAN ONLINE</b></Link>\n                <button \n                    className='navbar-toggler' \n                    type='button' \n                    data-toggle='collapse' \n                    data-target='#navbarNav' \n                    aria-controls='navbarNav' \n                    aria-expanded='false' \n                    aria-label='Toggle navigation'\n                >\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n\n                {/* <div className='collapse navbar-collapse' id='navbarNav'> */}\n                <div id='navbarNav'>\n                    \n                    <ul className='navbar-nav'>\n                        <li className='nav-item active'>\n                            <Link className='nav-link' to='/'>Home <span className='sr-only'>(current)</span></Link>\n                        </li>\n                        {isAuthenticated ? authLinks() : guestLinks()}\n                    </ul>\n                </div>\n            </div>\n            {redirect ? <Redirect to='/' /> : <Fragment></Fragment>}\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);","import React, { useEffect } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated, load_user } from '../actions/auth';\n\nconst Layout = ({ checkAuthenticated, load_user, children }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n        <div>\n            <Navbar />\n            {children}\n        </div>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","import { useDispatch } from \"react-redux\";\nimport {\n    setServerWebsocket,\n    setGamevars,\n    setGameState,\n    setBoard,\n    setCguesses,\n    setChosenWord,\n    setCurrentRoundCount,\n    setEx,\n    setFguesses,\n    setGsr,\n    setGuessedCorrectly,\n    setHintRequested,\n    setHints,\n    setHintsPool, \n    setP1ScoreBoard,  \n    setP2ScoreBoard,\n    setRotated, \n    setRoundState,\n    setWordWasRandom,\n    setWrongGuesses,\n    setMyPlayerId,\n    setDisconnected,\n    addNewMessage,\n    setTimer,\n    setPlayerCount\n  } from \"../actions\";\n\nexport default function SocketConnection() {\n  \n  const dispatch = useDispatch();\n  const addr = `wss://hangman.rogerli.net:8765/`;\n  // const addr = `ws://${process.env.REACT_APP_API_URL_DOMAIN}:8765/`;\n  // const addr = \"ws://localhost:8765\";\n  var socket = new WebSocket(addr);\n\n  socket.onopen = function(e) {\n      console.log(\"[CONNECTION ESTABLISHED] Connected to server.\");\n    }\n    socket.onmessage = function(e) {\n      processMessage(JSON.parse(e.data))\n    }\n    socket.onclose = function(e) {\n      dispatch(setDisconnected(true));\n      if (e.wasClean) {\n        console.log(\"[CONNECTION CLOSED] Connection closed cleanly\\n\");\n      } else {\n        console.log(\"[CONNECTION CLOSED] Connection died unexpectedly.\\n\")\n      }\n    };\n\n\n  // this function processes server messages.\n  const processMessage = function(msg) {\n      const msg_type = msg[\"msg_type\"]\n      if (msg_type === \"update\") {\n        const update_type = msg[\"update_type\"]\n        const content = msg[\"content\"]\n        switch(update_type) {\n          case \"game_state\":\n            dispatch(setGameState(content)); return;\n          case \"current_round_count\":\n            dispatch(setCurrentRoundCount(content)); return;\n          case \"__chosen_word\":\n            dispatch(setChosenWord(content)); return;\n          case \"__hints\":\n            dispatch(setHintsPool(content)); return;\n          case \"ex\":\n            dispatch(setEx(content)); return;\n          case \"gsr\":\n            dispatch(setGsr(content)); return;\n          case \"board\":\n            dispatch(setBoard(content)); return;\n          case \"cguesses\":\n            dispatch(setCguesses(content)); return;\n          case \"fguesses\":\n            dispatch(setFguesses(content)); return;\n          case \"hints\":\n            dispatch(setHints(content)); return;\n          case \"hint_requested\":\n            dispatch(setHintRequested(content)); return;\n          case \"p1scoreboard\":\n            dispatch(setP1ScoreBoard(content)); return;\n          case \"p2scoreboard\":\n            dispatch(setP2ScoreBoard(content)); return;\n          case \"rotated\":\n            dispatch(setRotated(content)); return;\n          case \"round_state\":\n            dispatch(setRoundState(content)); return;\n          case \"word_was_random\":\n            dispatch(setWordWasRandom(content)); return;\n          case \"guessed_correctly\":\n            dispatch(setGuessedCorrectly(content)); return;\n          case \"wrong_guesses\":\n            dispatch(setWrongGuesses(content)); return;\n          case \"timer\":\n            dispatch(setTimer(content)); return;\n          default:\n            return;\n        }\n      } else if (msg_type === \"information\") {\n        const information_type = msg[\"information_type\"];\n        const content = msg[\"content\"]\n        if (information_type === \"GAMEVARS\") {\n          dispatch(setGamevars(content));\n        } else if (information_type === \"your_info\") {\n          dispatch(setMyPlayerId(content));\n        } \n      } else if (msg_type === \"notification\") {\n        const notification_type = msg[\"notification_type\"];\n        const content = msg[\"content\"]\n        if (notification_type === \"warning\" || notification_type === \"success\" && msg[\"show\"]) {\n            const newJson = {\n              \"chat_type\" : notification_type,\n              \"sender\" : \"SERVER\",\n              \"content\" : content\n            }\n            dispatch(addNewMessage(newJson));\n          }\n      } else if (msg_type === \"chat\") {\n        const chat_type = msg[\"chat_type\"];\n        const sender = msg[\"sender\"];\n        const content = msg[\"content\"];\n        const newJson = {\n          \"chat_type\" : chat_type,\n          \"sender\" : sender,\n          \"content\" : content\n        }\n          dispatch(addNewMessage(newJson));\n      } else if (msg_type === \"meta_info\") {\n        const player_counts = msg[\"current_player_counts\"];\n        const current_player_gaming = msg[\"current_player_gaming\"];\n        const current_game_counts = msg[\"current_game_counts\"];\n        dispatch(setPlayerCount([player_counts, current_player_gaming, current_game_counts]));\n      }\n    }\n\n  // SETTING REDUX SOCKET STATE so the socket is more accessible.\n  dispatch(setServerWebsocket(socket));\n\n  return (\n    <div></div>\n  )\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Home from './containers/Home';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport HowToPlay from './containers/HowToPlay';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\nimport Facebook from './containers/Facebook';\nimport Google from './containers/Google';\nimport RedirectPage from './containers/RedirectPage'\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport Layout from './hocs/Layout';\nimport SocketConnection from './utils/socketConnection';\n\nconst App = () => (\n    <Provider store={store}>\n        <SocketConnection/>\n        <Router>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Home} />\n                    <Route exact path='/login' component={Login} />\n                    <Route exact path='/howtoplay' component={HowToPlay} />\n                    <Route exact path='/signup' component={Signup} />\n                    <Route exact path='/facebook' component={Facebook} />\n                    <Route exact path='/google' component={Google} />\n                    <Route exact path='/redirectpage' component={RedirectPage} />\n                    <Route exact path='/reset-password' component={ResetPassword} />\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\n                </Switch>\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <>\n      <App />\n    </>,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}